(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    308358,       6348]
NotebookOptionsPosition[    294661,       6138]
NotebookOutlinePosition[    295004,       6153]
CellTagsIndexPosition[    294961,       6150]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Working with Reaction-Diffusion Equations Using Mathematica", "Section",
 CellChangeTimes->{{3.777042118966982*^9, 3.777042133360838*^9}, {
  3.777042215323509*^9, 
  3.777042223009226*^9}},ExpressionUUID->"df6f8e02-6691-46cc-8dcf-\
0ec376269390"],

Cell[CellGroupData[{

Cell["\<\
These exercises will expose you to two of the things Mathematica does really \
well:  Symbolic math, and dynamic visualization.  \
\>", "Subsection",
 CellChangeTimes->{{3.777042188844247*^9, 3.777042199829596*^9}, {
  3.7770422319444036`*^9, 3.777042277877287*^9}, {3.777203036703875*^9, 
  3.777203038186193*^9}},ExpressionUUID->"bf7dc5b2-1c24-4c45-b83a-\
ab969c8d08af"],

Cell["\<\
You will also learn how natural it is to use the Notebook format in \
Mathematica, which has a lot of ability to format things nicely (like Latex, \
only easier).  \
\>", "Text",
 CellChangeTimes->{{3.777043121671618*^9, 
  3.777043167496984*^9}},ExpressionUUID->"6af2cd88-5535-40b5-81d7-\
7922c9a45001"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["1.  What are reaction-diffusion equations?", "Section",
 CellChangeTimes->{{3.777042285950634*^9, 
  3.7770422984640017`*^9}},ExpressionUUID->"b6101b6f-499e-4ad6-90c0-\
a4f6777f7b7d"],

Cell[TextData[{
 "These are partial differential equations that describe systems in which \
species (i.e. molecules) both diffuse and undergo biochemical reactions.  For \
simplicity, we will consider only ",
 StyleBox["one-dimensional diffusion",
  FontWeight->"Bold"],
 " here, in which case the PDE that describes the dynamics of such diffusion \
is:   ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "c"}], 
    RowBox[{"\[PartialD]", "t"}]], TraditionalForm]],ExpressionUUID->
  "8575606d-70c3-4f59-8c42-1d378b8f8578"],
 " = ",
 StyleBox["D",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], "c"}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["x", "2"]}]], TraditionalForm]],ExpressionUUID->
  "146f7421-e2d3-4c24-be0b-c8f84c6c9ad2"],
 "  (Fick\[CloseCurlyQuote]s second law), where c is the amount or \
concentration of the species of interest.  In contrast, ",
 StyleBox["reactions",
  FontWeight->"Bold"],
 " are typically modeled with ODEs like:\n\n",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DifferentialD]", "c"}], 
    RowBox[{"\[DifferentialD]", "t"}]], TraditionalForm]],ExpressionUUID->
  "e6b67cb0-b981-4e55-9b2f-f0552f125166"],
 "= ",
 StyleBox["v",
  FontSlant->"Italic"],
 "  (with v a constant, constant production);\n",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DifferentialD]", "c"}], 
    RowBox[{"\[DifferentialD]", "t"}]], TraditionalForm]],ExpressionUUID->
  "29272748-e5f3-43a4-be83-c177c5644703"],
 "= -",
 StyleBox["k c ",
  FontSlant->"Italic"],
 " (first order destruction);\n",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DifferentialD]", "c"}], 
    RowBox[{"\[DifferentialD]", "t"}]], TraditionalForm]],ExpressionUUID->
  "24bafccb-00d5-4b38-842c-fe1a665dc4b2"],
 "= -",
 StyleBox["k a c",
  FontSlant->"Italic"],
 " (reaction of c with a to form something else)\n",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DifferentialD]", "c"}], 
    RowBox[{"\[DifferentialD]", "t"}]], TraditionalForm]],ExpressionUUID->
  "30e59557-2c5a-418e-b64e-478a34672bd2"],
 "= ",
 Cell[BoxData[
  FormBox[
   FractionBox["v", 
    RowBox[{"1", "+", " ", 
     RowBox[{"\[Gamma]", " ", "c"}]}]], TraditionalForm]],ExpressionUUID->
  "80cfe392-ce5a-42bd-a708-feb4b113029b"],
 " (negative feedback of c on its own production)\n\nTo generate reaction \
diffusion equations one simply sums up the terms on the right hand side for \
whatever processes are going on in ones system (this is called the principle \
of superposition).  Thus, diffusion with constant production and first order \
decay (destruction) looks like this:"
}], "Text",
 CellChangeTimes->{{3.77704230865448*^9, 3.777042702443837*^9}, {
   3.777042775492611*^9, 3.777042788725957*^9}, {3.777047121802267*^9, 
   3.777047123856235*^9}, 
   3.777203078568818*^9},ExpressionUUID->"20cc5304-769f-4150-8698-\
e052c23d00cf"],

Cell[BoxData[
 FormBox[
  RowBox[{" ", 
   RowBox[{
    FormBox[
     FractionBox[
      RowBox[{"\[PartialD]", "c"}], 
      RowBox[{"\[PartialD]", "t"}]],
     TraditionalForm], " ", "=", " ", 
    RowBox[{
     RowBox[{"D", 
      FormBox[
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], "c"}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["x", "2"]}]],
       TraditionalForm]}], " ", "+", " ", "v", " ", "-", " ", 
     RowBox[{"k", " ", "c"}]}]}]}], TraditionalForm]], "Text",
 CellChangeTimes->{{3.7770427073337307`*^9, 3.777042729310652*^9}, 
   3.777047117341517*^9},ExpressionUUID->"0212a112-c2b8-4f5a-aa9b-\
561baeaf9f16"],

Cell[TextData[{
 "Solving RD equations requires specifying both initial conditions (the value \
of ",
 StyleBox["c",
  FontSlant->"Italic"],
 " everywhere at t=0) and boundary conditions, the value of either ",
 StyleBox["c",
  FontSlant->"Italic"],
 " or ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "c"}], 
    RowBox[{"\[PartialD]", "x"}]], TraditionalForm]],
  CellChangeTimes->{{3.7770427073337307`*^9, 3.777042729310652*^9}},
  ExpressionUUID->"95ad3105-0c89-4cfc-bffa-6913d33613cf"],
 " at two points, representing the boundaries of the system.  Examples of \
boundary conditions can be that ",
 StyleBox["c",
  FontSlant->"Italic"],
 " has a constant value, or constant derivative at a given boundary, but can \
also be more complicated.  Also, one can consider an infinite domain, where \
",
 StyleBox["c",
  FontSlant->"Italic"],
 " can diffuse to infinity; typically solving PDEs for such cases requires \
solving with an arbitrary boundary and after getting a solution, letting the \
location of it go to infinity.  \n\nWe will use Mathematica to generate some \
analytical solutions to some RD equations.  In some cases, however, explicit \
solutions may be hard to find, in which case we can also solve equations \
numerically, substituting in parameter values before solving, and getting a \
solution in the form of a graph of how the system behaves.  "
}], "Text",
 CellChangeTimes->{{3.777042753138588*^9, 3.777042766505536*^9}, {
  3.777042796707047*^9, 3.777042852321455*^9}, {3.777042884541957*^9, 
  3.777043099165552*^9}, {3.777203128843689*^9, 
  3.777203150800356*^9}},ExpressionUUID->"af30dffb-65f9-460d-8cb2-\
00bdc35ca9b0"]
}, Closed]],

Cell[CellGroupData[{

Cell["2. Representing PDEs in Mathematica", "Section",
 CellChangeTimes->{{3.77704318364485*^9, 
  3.7770431976358232`*^9}},ExpressionUUID->"4747e0cc-fc8a-4a12-9d2b-\
4d887888b9f5"],

Cell["\<\
Everything you type in Mathematica that starts with a letter is interpreted \
as a \[OpenCurlyDoubleQuote]symbol\[CloseCurlyDoubleQuote], unless it is \
already defined as something else (like a function).  All the pre-defined \
functions start with a capital letter, so as long as you name things using a \
lower case letter as the first letter, there will be no problem.  \
\>", "Text",
 CellChangeTimes->{{3.777043229489203*^9, 
  3.777043331902424*^9}},ExpressionUUID->"af9e9264-4614-4dc3-b67f-\
1ff0cc4236bd"],

Cell["\<\
How does Mathematica let you know if you\[CloseCurlyQuote]ve typed something \
that already has a definition associated with it?\
\>", "Text",
 CellChangeTimes->{{3.777043352773903*^9, 3.7770433732352753`*^9}},
 FontSlant->"Italic",
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"d3825e13-5855-4ed9-bb4e-d620d930f6b9"],

Cell[TextData[{
 "Representing variables versus parameters:  Mathematica will happily do math \
with any symbol you choose to type, but if you want it to take the derivative \
of a variable, you must explicitly show what that variable is a function of.\n\
\nSo if you write \[OpenCurlyDoubleQuote]c\[CloseCurlyDoubleQuote] and then \
take the derivative of it with respect to x, you will get zero.\nBut if you \
write c[x] and then take the derivative of it with respect to x, you will get \
",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None], "[", "x", "]"}]],
  CellChangeTimes->{{3.777043747551859*^9, 3.777043754925269*^9}},
  ExpressionUUID->"1dbd72e4-3a77-4d91-8cfc-3f0b6593ad90"],
 ".\nNote that Mathematica typically uses square brackets where typeset Math \
with typically use parenthesis.  \n\nThe function that represents taking a \
derivative in Mathematica is \
\[OpenCurlyDoubleQuote]D\[CloseCurlyDoubleQuote].  The syntax is \n\nD[var_, \
arg1_, arg2_, arg3_...]\nor\nD[var_, {arg1_, times_}, {arg2_, times_}, \
{arg3_, times_}...]\n\nD[c[t],t]\nD[c[x,t], {t, 2}]\nD[c[x,t], {t,2},{x,1}]"
}], "Text",
 CellChangeTimes->{{3.777043435150807*^9, 3.777043624435412*^9}, 
   3.777043770788094*^9, {3.7770438339675093`*^9, 3.77704391097281*^9}, {
   3.777043963472542*^9, 3.777044009015401*^9}, {3.777044052515932*^9, 
   3.777044084953231*^9}, {3.777309941004994*^9, 
   3.7773100049907637`*^9}},ExpressionUUID->"eb4af53b-de39-4344-9d95-\
bcd211957656"],

Cell["\<\
where  \[OpenCurlyDoubleQuote]var\[CloseCurlyDoubleQuote] is the variable, \
\[OpenCurlyDoubleQuote]args\[CloseCurlyDoubleQuote] are the arguments you are \
taking derivatives with respect to , and times\[CloseCurlyDoubleQuote] means \
how many times you are taking the derivative (i.e. second derivative, third \
derivative) etc.  \
\>", "Text",
 CellChangeTimes->{{3.777044019209427*^9, 
  3.777044103952199*^9}},ExpressionUUID->"13787ea1-0ca2-45d6-a08f-\
fa25846e7bfe"],

Cell[TextData[{
 "How would you represent ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DifferentialD]", "c"}], 
    RowBox[{"\[DifferentialD]", "t"}]], TraditionalForm]],
  CellChangeTimes->{{3.7770427073337307`*^9, 3.777042729310652*^9}},
  ExpressionUUID->"9ba257f5-01b7-4211-a113-c75652b3e5db"],
 " in Mathematica?"
}], "Text",
 CellChangeTimes->{{3.777044208597517*^9, 3.777044238587323*^9}, 
   3.7770443081513557`*^9, {3.777203222599831*^9, 3.777203223537015*^9}, {
   3.7773100104970293`*^9, 3.7773100332521257`*^9}, {3.777310080291251*^9, 
   3.7773100806433506`*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"b70e94d6-c293-4428-adc6-a05fb7fff1bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"c", "[", "t", "]"}], ",", "t"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.777310076925247*^9, 3.777310082920248*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"b12936d2-59d4-4654-934c-9b3965d34fdb"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["c", "\[Prime]",
   MultilineFunction->None], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.777310083986351*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"62e3933d-6b3f-4da9-bbbc-87dcf1f3743f"]
}, Open  ]],

Cell[TextData[{
 "How would you represent ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], "c"}], 
    RowBox[{
     RowBox[{"\[PartialD]", "x"}], " ", 
     RowBox[{"\[PartialD]", "y"}]}]], TraditionalForm]], "Text",
  CellChangeTimes->{{3.7770427073337307`*^9, 3.777042729310652*^9}},
  ExpressionUUID->"196fb153-dd51-4113-87a9-16b0e8efdfb7"],
 " in Mathematica?"
}], "Text",
 CellChangeTimes->{{3.777044123219975*^9, 3.777044180899989*^9}, {
  3.777203224998516*^9, 3.777203225991308*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"18976b8d-d762-4945-bcf2-95a2e7d62340"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"c", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"y", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"c", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", " ", "x", ",", " ", "y"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"x", ",", "y"}]], 
    RowBox[{"c", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.7773101100147295`*^9, {3.7773101408441935`*^9, 3.777310178819564*^9}, {
   3.777310256419926*^9, 3.7773102646508646`*^9}, {3.777310311126485*^9, 
   3.7773103435806828`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"99bda209-0c5c-449c-9447-d17ec872c78e"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["c", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "1"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Output",
 CellChangeTimes->{
  3.777310181354776*^9, 3.777310265442742*^9, {3.777310337037145*^9, 
   3.7773103445281396`*^9}},
 CellLabel->
  "Out[112]=",ExpressionUUID->"dca34700-0fc9-4ace-8d4a-d1fb968c896b"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["c", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "1"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Output",
 CellChangeTimes->{
  3.777310181354776*^9, 3.777310265442742*^9, {3.777310337037145*^9, 
   3.77731034453512*^9}},
 CellLabel->
  "Out[113]=",ExpressionUUID->"6a674561-08c8-4e5f-9ddd-89f59f00d634"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["c", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "1"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Output",
 CellChangeTimes->{
  3.777310181354776*^9, 3.777310265442742*^9, {3.777310337037145*^9, 
   3.7773103445410614`*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"a63cc893-e15f-4a80-b587-bd7872ec36d6"]
}, Open  ]],

Cell[TextData[{
 "Another way to produce these forms is using the following syntax: \n\n",
 Cell[BoxData[Cell[TextData[{
   Cell[BoxData[
    RowBox[{
     RowBox[{
      TemplateBox[{Cell[
         TextData["Derivative"]],"paclet:ref/Derivative"},
       "RefLink",
       BaseStyle->{"InlineFormula"}], "[", 
      RowBox[{
       SubscriptBox[
        StyleBox["n", "TI"], 
        StyleBox["1", "TR"]], ",", 
       SubscriptBox[
        StyleBox["n", "TI"], 
        StyleBox["2", "TR"]], ",", 
       StyleBox["\[Ellipsis]", "TR"]}], "]"}], "[", 
     StyleBox["f", "TI"], "]"}]], "InlineFormula",
    FontFamily->"Source Sans Pro",ExpressionUUID->
    "be984020-4925-4a89-be52-001b8b767f87"],
   " \[LineSeparator]is the general form, representing a function obtained \
from ",
   Cell[BoxData[
    StyleBox["f", "TI"]], "InlineFormula",
    FontFamily->"Source Sans Pro",ExpressionUUID->
    "6691d695-356f-44f3-9ba0-6dc996bbe61b"],
   " by differentiating ",
   Cell[BoxData[
    SubscriptBox[
     StyleBox["n", "TI"], 
     StyleBox["1", "TR"]]], "InlineFormula",
    FontFamily->"Source Sans Pro",ExpressionUUID->
    "5ea432b3-d4cf-4e98-bf8e-1cb479939265"],
   " times with respect to the first argument, ",
   Cell[BoxData[
    SubscriptBox[
     StyleBox["n", "TI"], 
     StyleBox["2", "TR"]]], "InlineFormula",
    FontFamily->"Source Sans Pro",ExpressionUUID->
    "26d1d924-c1aa-480a-ac42-521f15270a1c"],
   " times with respect to the second argument, and so on. "
  }],ExpressionUUID->"379ee893-4d91-42b4-bdf7-f0e13f410154"]],
  GridBoxOptions->{
  GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}}},
  ExpressionUUID->"c21178e1-8985-4ffc-8535-a5a2f9551bb8"]
}], "Text",
 CellChangeTimes->{{3.777044280924535*^9, 
  3.777044339268203*^9}},ExpressionUUID->"6a5d729c-e13f-43da-aa66-\
85ead5e3eefc"],

Cell["For example:", "Text",
 CellChangeTimes->{{3.777203790938005*^9, 
  3.7772037930624647`*^9}},ExpressionUUID->"c6a9e095-7c99-4563-bc0b-\
ed034e898818"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Derivative", "[", 
   RowBox[{"1", ",", "1"}], "]"}], "[", "c", "]"}]], "Input",
 CellChangeTimes->{{3.777044349113233*^9, 3.7770443812853613`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d2943250-1251-41a2-a426-a803f0fbecbc"],

Cell[BoxData[
 SuperscriptBox["c", 
  TagBox[
   RowBox[{"(", 
    RowBox[{"1", ",", "1"}], ")"}],
   Derivative],
  MultilineFunction->None]], "Output",
 CellChangeTimes->{{3.777044362603354*^9, 3.777044381761623*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"0e637bc2-a7ca-48ff-b0fe-4d50465eb651"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Derivative", "[", 
    RowBox[{"1", ",", "1"}], "]"}], "[", "c", "]"}], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.777044413296988*^9, 3.7770444143893757`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"982ed199-5ab6-4f96-bc80-44c118817af4"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["c", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "1"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Output",
 CellChangeTimes->{3.7770444148015127`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"f624beb9-4d07-465e-9209-e41b74f092b7"]
}, Open  ]],

Cell[TextData[{
 "Finally to write any equation in Mathematica, you will need to know what \
symbol to use for \[OpenCurlyDoubleQuote]logical equals\
\[CloseCurlyDoubleQuote].  Mathematica uses a ",
 StyleBox["double",
  FontSlant->"Italic"],
 " equals sign. If you use a single equals sign it is an instruction to set \
the symbol on the left to have the value on the right.  If you use a double \
equals it means that you have an equation you are considering.  An equation \
is like a question:  Does the right hand side evaluate to the same thing as \
the left hand side?  In the event that you write an equation that is \
tautologically true in Mathematica, it just returns \
\[OpenCurlyDoubleQuote]True\[CloseCurlyDoubleQuote]"
}], "Text",
 CellChangeTimes->{{3.777044525788867*^9, 
  3.777044674456962*^9}},ExpressionUUID->"d6cc942f-3d81-4f6c-a2dc-\
24d820491efd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "\[Equal]", "5"}]], "Input",
 CellChangeTimes->{{3.7770446769802*^9, 3.777044677753042*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"f0fe1385-a16b-477d-87b2-8bd821c593c4"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7773103521587133`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"e64a0c67-aaad-4e4f-a955-729a75d4a583"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "b"}], "\[Equal]", 
  RowBox[{"b", "+", "a"}]}]], "Input",
 CellChangeTimes->{{3.7770450340232687`*^9, 3.7770450376215153`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"6fa46133-f467-494d-af08-009a3218087c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.777310364803834*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"1e7d71c2-db1c-479d-aec9-f363b19e57ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox[
   SuperscriptBox["5", "2"]], "\[Equal]", "5"}]], "Input",
 CellChangeTimes->{{3.7770446862936993`*^9, 3.777044697384741*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"82dba370-0c57-4ec1-8462-d136c2a22edf"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.777310373851636*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"e89b4371-d63d-4a2d-b12c-2732270966cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     SuperscriptBox["5", "2"]}]], "\[Equal]", "5"}]}]], "Input",
 CellChangeTimes->{{3.7773104338381276`*^9, 3.7773104417060328`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"a22d9213-5886-46df-9a7b-02aaca51a1df"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.777310442675438*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"5776571e-6347-47ad-81c0-263bf8a2da30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Equal]", " ", 
  RowBox[{"Log", "[", 
   RowBox[{"10", ",", "100"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777044858492525*^9, 3.777044904892906*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"3d6c2112-d16e-4c7e-bbe8-44fb32c5b679"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.777310389427936*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"c98a2859-7628-4a5e-aac1-99ed8c280f6e"]
}, Open  ]],

Cell["\<\
But sometimes it may needs some instruction before it can be sure that \
something is a tautology:\
\>", "Text",
 CellChangeTimes->{{3.777073751083797*^9, 3.777073783613022*^9}, 
   3.7772077909771852`*^9},ExpressionUUID->"d1c6ae91-b757-4651-8420-\
8e9e26e1a108"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox[
   SuperscriptBox["x", "2"]], "\[Equal]", "x"}]], "Input",
 CellChangeTimes->{3.777310467100074*^9},
 CellLabel->
  "In[119]:=",ExpressionUUID->"64dccc32-e24e-49fc-bd16-6329092d0544"],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   SuperscriptBox["x", "2"]], "\[Equal]", "x"}]], "Output",
 CellChangeTimes->{3.777310394121376*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"abac6ca6-bfca-4b78-b5e7-9da6ffce7b64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"x", " ", ">", "0"}], ",", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      SqrtBox[
       SuperscriptBox["x", "2"]], "\[Equal]", "x"}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7773104640602407`*^9, 3.7773104948099184`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"60f6a045-760f-4833-a89c-b9dcb73081d4"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.777310497629408*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"39843afc-c72a-46ac-8e86-a9c25b00d10c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    SqrtBox[
     SuperscriptBox["x", "2"]], "\[Equal]", "x"}], ",", " ", 
   RowBox[{"x", " ", ">", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.777310509128628*^9, 3.7773105341217117`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"a0d6239a-de57-4c66-9fc3-1eb4c575fdcd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7773105351090713`*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"5840f0c7-5435-447c-a6d4-1d07068931b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     SqrtBox[
      SuperscriptBox["x", "2"]], "\[Equal]", "x"}], ",", " ", 
    RowBox[{"Element", "[", 
     RowBox[{"x", ",", " ", "Reals"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777310647985217*^9, 3.7773107042795067`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"8e26e119-50b1-49a3-a7e2-3e039e06ff29"],

Cell[BoxData[
 RowBox[{"x", "\[GreaterEqual]", "0"}]], "Output",
 CellChangeTimes->{3.7773107117455254`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"a12344a1-9356-4458-948d-cc0392316945"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7773106819153566`*^9, 
  3.7773106828449078`*^9}},ExpressionUUID->"d0a622bf-5f87-4013-ace7-\
e17c43bc159a"],

Cell[TextData[{
 "Exercise:  write the PDE ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     FormBox[
      FractionBox[
       RowBox[{"\[PartialD]", "c"}], 
       RowBox[{"\[PartialD]", "t"}]],
      TraditionalForm], " ", "=", " ", 
     RowBox[{
      FormBox[
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], "c"}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["x", "2"]}]],
       TraditionalForm], " ", "+", " ", "v", " ", "-", " ", 
      RowBox[{"k", " ", "c"}]}]}]}], TraditionalForm]], "Text",
  CellChangeTimes->{{3.7770427073337307`*^9, 3.777042729310652*^9}},
  ExpressionUUID->"579bd503-da72-41e3-823c-ec99b57f0ea1"],
 " in Mathematica.  "
}], "Text",
 CellChangeTimes->{{3.777044503107746*^9, 3.777044517937203*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"6f184b8b-0f41-4d64-b4ff-133ed7ebbd5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], 
    RowBox[{"c", "[", 
     RowBox[{"x", ",", "t"}], "]"}]}], " ", "\[Equal]", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", "v", "-", 
    RowBox[{"k", " ", 
     RowBox[{"c", "[", 
      RowBox[{"x", ",", "t"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7773107181643476`*^9, 3.777310827947478*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"0428df56-94ef-459f-92e5-df88fb6e8df8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["c", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "1"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{"v", "-", 
   RowBox[{"k", " ", 
    RowBox[{"c", "[", 
     RowBox[{"x", ",", "t"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["c", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7773108302323637`*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"c17dd272-77b5-40b4-b684-e5e4b46ae662"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3.  Analytical Solutions to PDEs", "Section",
 CellChangeTimes->{{3.777045073860341*^9, 
  3.777045087965129*^9}},ExpressionUUID->"b49ca390-6140-439e-879f-\
cc34e52b3692"],

Cell["Consider this example.  Give it some time to run:", "Text",
 CellChangeTimes->{{3.7770738063582573`*^9, 
  3.777073812942542*^9}},ExpressionUUID->"bd0c02fd-0a1c-4ef5-b960-\
32ba80a0c87a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["c", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
      RowBox[{"d", " ", 
       RowBox[{
        SuperscriptBox["c", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "t"}], "]"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["c", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "  ", "0"}], ",", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"1", ",", "t"}], "]"}], " ", "\[Equal]", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", " ", "1"}]}], "}"}], ",", 
   " ", 
   RowBox[{"c", "[", 
    RowBox[{"x", ",", "t"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "t"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67921135629084*^9, 3.6792114173913517`*^9}, {
   3.679211497583948*^9, 3.6792115045748997`*^9}, 3.679211537557777*^9, 
   3.679211609724093*^9, {3.679211713767644*^9, 3.67921171622267*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"4e98bd80-234f-4eb2-a771-e154be67319b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"x", ",", "t"}], "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     TemplateBox[{FractionBox[
        RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
             RowBox[{"-", 
               FractionBox["1", "4"]}], " ", "d", " ", 
             SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
             SuperscriptBox[
              RowBox[{"(", 
                RowBox[{"1", "+", 
                  RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}], "2"]}]], " ", 
          RowBox[{"Cos", "[", 
            RowBox[{"\[Pi]", " ", 
              RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
          RowBox[{"Cos", "[", 
            RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", "x", " ", 
              RowBox[{"(", 
                RowBox[{"1", "+", 
                  RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], "]"}]}], 
        RowBox[{"\[Pi]", "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"K", "[", "1", "]"}]}]}]],RowBox[{"K", "[", "1", "]"}],
       "0","\[Infinity]"},
      "InactiveSum",
      DisplayFunction->(RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], 
          RowBox[{#2, "=", #3}], #4], #}]& ),
      InterpretationFunction->(RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7773108731305714`*^9, 3.777310898538599*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"3cc6a5af-ad89-458d-9975-a915fc3d757a"]
}, Open  ]],

Cell["This is an alternate form:", "Text",
 CellChangeTimes->{{3.7770738213088217`*^9, 
  3.777073828811268*^9}},ExpressionUUID->"be06f9ec-9132-40ad-ae7b-\
a52f5c6c2df0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["c", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
      RowBox[{"d", " ", 
       RowBox[{
        SuperscriptBox["c", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "t"}], "]"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["c", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "  ", "0"}], ",", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"1", ",", "t"}], "]"}], " ", "\[Equal]", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", " ", "1"}]}], "}"}], ",", 
   " ", "c", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "t"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67921135629084*^9, 3.6792114173913517`*^9}, {
   3.679211497583948*^9, 3.6792115045748997`*^9}, 3.679211537557777*^9, 
   3.679211609724093*^9, {3.679211713767644*^9, 3.67921171622267*^9}, 
   3.777045146350975*^9},
 CellLabel->
  "In[129]:=",ExpressionUUID->"890362fd-0a4c-48fd-b62f-9a382db0cac2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "t"}], "}"}], ",", 
      RowBox[{"2", " ", 
       TemplateBox[{FractionBox[
          RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
               RowBox[{"-", 
                 FractionBox["1", "4"]}], " ", "d", " ", 
               SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                  RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}], "2"]}]], " ", 
            RowBox[{"Cos", "[", 
              RowBox[{"\[Pi]", " ", 
                RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
            RowBox[{"Cos", "[", 
              RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", "x", " ", 
                RowBox[{"(", 
                  RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], "]"}]}], 
          RowBox[{"\[Pi]", "+", 
            RowBox[{"2", " ", "\[Pi]", " ", 
              RowBox[{"K", "[", "1", "]"}]}]}]],RowBox[{"K", "[", "1", "]"}],
         "0","\[Infinity]"},
        "InactiveSum",
        DisplayFunction->(RowBox[{
           UnderoverscriptBox[
            StyleBox["\[Sum]", "Inactive"], 
            RowBox[{#2, "=", #3}], #4], #}]& ),
        InterpretationFunction->(RowBox[{
           RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
           RowBox[{#, ",", 
             RowBox[{"{", 
               RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}], 
     "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7773109111508465`*^9, 3.7773109235815473`*^9}},
 CellLabel->
  "Out[129]=",ExpressionUUID->"0017ebe5-55cd-4e73-82ab-5a854438622e"]
}, Open  ]],

Cell["\<\
What\[CloseCurlyQuote]s with this \[OpenCurlyDoubleQuote]{{symbol-> formula}}\
\[CloseCurlyDoubleQuote] formatting?  What does it mean?  Why is the \
Summation operator inactive?\
\>", "Text",
 CellChangeTimes->{{3.777045407182377*^9, 3.777045449405768*^9}, {
  3.777046386807189*^9, 3.7770463952516937`*^9}, {3.7770738458038807`*^9, 
  3.7770738500381727`*^9}},ExpressionUUID->"f46ee577-39b0-4516-a1d2-\
982abe97d8ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"mysol", "=", " ", 
   RowBox[{"Activate", "[", 
    RowBox[{"2", " ", 
     TemplateBox[{FractionBox[
        RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
             RowBox[{"-", 
               FractionBox["1", "4"]}], " ", "d", " ", 
             SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
             SuperscriptBox[
              RowBox[{"(", 
                RowBox[{"1", "+", 
                  RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}], "2"]}]], " ", 
          RowBox[{"Cos", "[", 
            RowBox[{"\[Pi]", " ", 
              RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
          RowBox[{"Cos", "[", 
            RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", "x", " ", 
              RowBox[{"(", 
                RowBox[{"1", "+", 
                  RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], "]"}]}], 
        RowBox[{"\[Pi]", "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"K", "[", "1", "]"}]}]}]],RowBox[{"K", "[", "1", "]"}],
       "0","20"},
      "InactiveSum",
      DisplayFunction->(RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], 
          RowBox[{#2, "=", #3}], #4], #}]& ),
      InterpretationFunction->(RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7773112183736753`*^9, 3.777311244895686*^9}, {
  3.777311275434927*^9, 3.7773112847120986`*^9}, {3.7773114154392853`*^9, 
  3.7773114240861177`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"e879cbf6-06a9-4cf7-8175-812680d7d40b"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"\[Pi]", " ", "x"}], "2"], "]"}]}], "\[Pi]"], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["9", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"3", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["25", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"5", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["49", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"7", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["81", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"9", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"9", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["121", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"11", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"11", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["169", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"13", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"13", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["225", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"15", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"15", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["289", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"17", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"17", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["361", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"19", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"19", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["441", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"21", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"21", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["529", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"23", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"23", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["625", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"25", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"25", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["729", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"27", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"27", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["841", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"29", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"29", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["961", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"31", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"31", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1089", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"33", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"33", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1225", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"35", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"35", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1369", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"37", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"37", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1521", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"39", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"39", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1681", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"41", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"41", " ", "\[Pi]"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.777311416450581*^9, 3.777311424664563*^9}},
 CellLabel->
  "Out[138]=",ExpressionUUID->"2c96290a-32b5-4704-b94f-471540264b7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"\[Pi]", " ", "x"}], "2"], "]"}]}], "\[Pi]"], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["9", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"3", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["25", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"5", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["49", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"7", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["81", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"9", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"9", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["121", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"11", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"11", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["169", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"13", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"13", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["225", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"15", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"15", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["289", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"17", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"17", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["361", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"19", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"19", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["441", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"21", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"21", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["529", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"23", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"23", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["625", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"25", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"25", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["729", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"27", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"27", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["841", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"29", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"29", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["961", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"31", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"31", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1089", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"33", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"33", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1225", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"35", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"35", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1369", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"37", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"37", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1521", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"39", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"39", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1681", "4"]}], " ", "d", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"41", " ", "\[Pi]", " ", "x"}], "2"], "]"}]}], 
     RowBox[{"41", " ", "\[Pi]"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7773112889338303`*^9, 3.777311407615186*^9}, {
  3.7773114540649185`*^9, 3.7773114545226526`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"7852fa49-b0ee-49e5-ab3b-951488a4bbfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"mysol", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", " ", "\[Rule]", "1"}], ",", 
       RowBox[{"k", "\[Rule]", " ", "0.2"}]}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7773114477029037`*^9, 3.777311457238388*^9}, 
   3.7773116019331956`*^9, {3.777311790938347*^9, 3.777311817234975*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"04a7107e-ef6b-433d-9fdb-ceee9f5e7752"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
wcc0t+vlFUTw+QSfG5OYvb1qhfv/h8T9Cw==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJw1mwncDlUbxp+ZOTMPirTQQquyVEhFSkqIZM2SEoqksrQoEVKKCi0SWSvt
aNFOi0hp175qU5K0l3bSd/1d5/v93vOea+45M8+ZM/e599m7/7ldz0lLpdJz
oVTK1P+mf/WSUukF9bV0Yl+1A0X/KTH+Uf3BRanUTLQj8lKptmj7qe2jNlD3
2F39YeobaszhGtNUY/YSbW+1A3S8h/o91fYXblT4umYa80PiMd+r/0KtmvAa
9V+pVReurfH7lfWbmtfpuq6vfmNn0fuor5n6d+tpzODg+d6pcQ00rqnwYbr/
TqnvuZ+Ov0s8h2/VP6tzO4s2Xv0rOn5ZbTe1X3X9QerfUP+y2i8aM1/9O2ob
he9T31q/1Vhj3hO+TNfvKfq5or2r49+FH+AemsMRwofr/Gkau7/aTzqur2c5
SecH6/wy0dqrrRW9uegXiT5a9FMSv4sfmHPmMd+qv0H3epv1UD9PtO+Fv1U7
VNeeqfPDdO3axOvzpfp+mtOuwqepP12thnAT9bU0vpHG99P4fYUPEe7POxE+
SPg04S0a21r37sg7E/0E0c8S/WjhkcKXCB8g3FX4bOF6wscLnym8h/CBwr2F
9xJuINyX9RA+X3gkPCJ8nvAI4T2F6wv3ET5MeJDwcOEDhbsJDxLeW7ih8KnC
DYRPFh4iXEe4lfAZwrWFWwoPEH5Y7V/Nvbn6IZE34JF9It/W13Hr1O/oaNG/
1nrtouM6Ov4GXhCuW3JfI+J1idcT3myVms+P1LV38jzqH1BfV3NopzkMZB30
nl7VmKnC54n+m65pKjxcYw/iWuELhRuwp4T/yH1vxmwvem3hlbrXX7nnd7jo
x6beg2frfInnEv0VjXlefRe1TG2Djuurf1X9P7r2MPhO1/4s3EDXjCz7nk1E
P1D0H3LPp7bwK5Ff31P/b+7nG63xL+Xmy3fVf6fWED6Mc24sfIDwr8KNNP5i
jX+A39X4sugVNY8uGnOS5v6b6IdqzCiNeUj4CI2ppDFljemkMSdqTE+d/0T0
A9RXEL2z6D1F/1g4iP44PKHrvxPtUF37iY7Xa8w89W/pnpdozNvq31AbLvym
+kTn2mpMF13zmo7PEP393LKItbxE9/tT547SmDYIRo1vo66z8H9qxwp3Uj9U
435W31jXFRrTUfQeOh6re90O7+n8pbnlUF/h9bllyzfqN+R+1+fr984IlkPw
zSLRmwpX0D3P0TW/sE+F/8vNm2NEa6Y2TPe8WPQHRT9c4yuyv+A15I+uOUf4
TuQP8xS+Q/h+4eHC9wk/xrPEvb11X4h+OzJNx+OFnxJ+Xniw8G3C9yJf9bsH
6PgUeFX9vaI/Kvo1wiuEXxN+RnPpoPY3x4nXfC+1yRrzrGivpn4nDdRK8ITu
WVnnjtU956qtFHkXPdPron0lPBc5qPaQ8FO6dozww8JPcx/hR4SXClcR7i7c
R3g74R7CfYXP1f03oo90793RG6IP0fEevB/hoegiZIYwShBdwPw/Ul9V9BNF
P1X07YV7Cp8mvCtyUfgs4bZ6J03gH+6hNlf0u0SvjgwTPgOdg/wTHiC8M7wg
PBB9iIwUPk94F+SZ8Jn8luZcE17XnP/S8dGit1V/pOgXiD5K9CbCZwtfKDy7
sJ6Zr/4KzftPjd+oflZhHXUPsoL9I/qe6i/XuZ+Ff1R/vu7ze2p5skjtH35H
9L8Kr/Vo9KZwIvqO6qurpTyT+vvZ86l16wdag22E31f/eeLx++o3Vgtvy7MK
fyRcWfhD9XV0bSPRDsl9vnIcU4X3hy0h3CLYXmAvnah5Ts8sP69EHon+p/qu
ot8g+vXoSuHZwjOEuwhfL3wtzy48TvgK4dbClwlfLtxG+HLh8cI9hW8SvlF4
gu77j+7/u/pxaj8Kf5/b9sEGQn901/gb0cMa30d4C88mfLLwTNGnC/cSniV8
k3Bv4aeFbxbuJjxVeAo6Qu1g9LbuX0/4EOHGwp/qftunln37iF6B9WGPIx/h
2SgTsMWwwbBnytGmwo6qEG0t3sWOwp+pH6Hf7YJ9VpgHfhEtFb5I9E7YBMh/
9bPgycJ2xP3Cj+v6B3W8CVmh60YH64ujRftReDZyTPh74RnsI+HvhGcii4Qv
wB7Q8XaF1/Nn+AN7A32ge9YqvK4Vo53ZPZiXuqk/KZgf6gXzTSXhvTSmaur1
qYVsQt+k5qW74GHNe5Xw3TwP+lD4p6jPD1W/m+iBfRx56c+om1ibRHh15vX4
D57NbIum0W7cReMy9jHPHm3SQ9S3QtZr7DjRr2L/RBl+tfDfUT631Jix2InC
bYWvEJ4gfILwFOHrhHcTriN8knClsmXQccI7li2zToAXypZ3bbBrooxopn5z
Yb2F/bBF7e/UdsWmwjL6Es2lWtl6optoOwvvi6wUnqRzZc3zVuFtypZ37djv
Zcup7sI7lC1DuwjvKlwbmSi8i/B+7FHhncqWp12Fj0zNz9gBFcuWy21FL5Wt
R4+C34VPz8w/Bwv3z8x7FwTbFTxXI9H7ZealxsJnCV8g3FC4l/BQ4YOET8vM
e9gV2LzI/Jqi1xO9l3AN4brCJyPDyrYDWgg3x3Yo2RYpyrZRWouel21ztIJf
yrZLWgpvW7ZMPx65WLZ9wF7IyrYDjhFuKnyu8EXClcvWB+2Ftytb1ndkPVkL
+Bg+jXx9UOq9gnx+W+Ne0HNsVqtaMl/Bk3/n5it4dZP6OYXtoAXqnxXtH2Ru
yTIJmdpI92yv371aYyYWli2luHeOF/0q0a8WvZ3wlcJXCXcWvk74GuGOwpOE
Jwt3EJ4oPIl1gP+Q+zxLajmDzN+/8Ho20dxGBduEvOszde2PmXlshs7V1LW3
Cx8j+ijRL4VnC+v1MTp/lOgjwKJVLVvvdhJuIXyx8FjhwcLfI+ty213f6LdK
ojdLLVexcbFRkR3YUdhjG9izhW0w9BX22xB4OHg+p5et1wvhKmXr7A7CdxS2
Q+9T379s3y8Xvhc7VvcJwh9Hf+zr3PuvhX7rOPWjo81TCftA53bF3lZ/B3tS
uB52olp11k/9xYntwF10XLOwjYetdzq2cLLV3C+NTUznXrfr3I7q66jvG31M
Tbt0t453w+ZXf5vaDtj26jvqfEPenY5Pjj4mpu7r6p9Qq6u2Sm0Julptnq7Z
Xue/1aB7hHeHV9U/pXYsz6b+SbXWiX8Lv7mtWqE2U61l9G23UX8c6yP8pcYd
k/h50WvNhB8W3qOwL4BPgO47UvgR4ecS/xZ24TO579OIMchL0frjj2W2K1dh
i6lvo7ZOpK+zrWKnVA9/WHgz9qn6pbnnybMsg3+w7dDVua9tqH5Q4ve7k66p
hfxQf3pqWwjb7378IWwB0eekxtjMC1PbaIuEl6SWVfOEFwh3Zz8JT0stt+4R
XpTal71VeH5qmTdf+MHUfvCDwk8I98FOEb45tT34pPCK1HYyNvYr0W7HZn4y
9d5aLvxyan/9GeEXU++tpcIvpN5Py4RfSi1fHxBeLNwDGSA8Xfh3PetTan9h
p6o/JDHPHYUdCj9iqwoPF740tXxj3dgfFyX2AYmzNEd+q78ktW1J/OQ+jenN
+0zMZ1XQB8ILRO+XGMO7J2LTqb8ptd5YKPxwar2xQPgh4Z7oUuEZwouiL4Lt
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
+Fs5Yob/Aycbswo=
            "]], Polygon3DBox[CompressedData["
1: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
qUry6XPBw8FTl/AvszbhU16nbUR/Qdp79N+nbeVab7Jfft/lM4c3iff7Jfvl
kU3igYGS/fTAJvFRVZJ/nN2EH5qyJN+V73J/75XkK3s32f9/6PKno5r4z9FK
/MG9rh+/Je0++gs12W8/pG1D/6wmfNEUjjMfbcInjVsSnx3fhG8ap8RffMTf
VTl3T9pAk31zjW49/IP+0yW50CrdGnR9T1Il5ne9n1+yHh/R54Ov4XsvQH+5
Ln93f9F3LNTtT78wfodecvAHS+4/yO8F/pj+1Jz/Ovj0knzyZnNWbP8Bbw2u
2+Qv+5bE7/oT+aE/lfjHY5vwCWOBB8yfmvAnY5fEq02bfOovJfG68eEQ8KQl
/NepTfiiiUryt9Ob8DeTlMQvpzXhTyYuifdOacI3TVgSn04lH1dl73Y/mAH8
Fvicknh/wjbx/3El8bd82Ue9+Oi5+uFUpsX+G8fGBu/BmE+dC8ZT4Jva+PIB
/QV46n76xnDGcoNpn/QSY8zdTwxkLOQ5Z/XzPo09RtOfgBcBf9ZLDDMveIx+
7mVM9lHHr/ksr9I+AU8MLox9G/wteMt+1s+uHJt2IBzsdFU4oHH7iSmNLeVk
z+2Hk9WXyglOBZ6U1tB/V//ShoOSe5KDmgLbXlzzszr3nMT8zBygzjmT9ROj
GqvKCZ/TT05gbiAnfHY/HNjs4Dd64cb035PUWdM/gA/geot1MYjv/0A5gy6m
8P3tD56/44Bm6yf+mYjz33H/5Pyf+tn/5QDGaePvJ6uzJo2F3JPdmz/Up7WZ
E/oKORPnivvjjPRrjk1kLIt9ni5HmRU8bT/fypjW2PYg7Nt3MZDfa17vSX9G
84l+ONfBTeaUc2s/xs/Z5TSzYFu0TWziOXs04RtHB7/i+mvDz45ZZw+UW9a/
GNsO4tgM2Kbvp/+5/qCffMf49cc6fI6c/PTud+Dx+tkPZnB/A08APqXN/nUP
72Qz/RnnXwu+l3Z9SUxhbLEsbVSJT3YvWo72jvsD40fzfu4Z9Mdqw8cdVsIf
GLcYv3zAsQvp3+m67OX9X1zyjfxWR5TwJeO2+RZHgVcC/6kNP6R+If/QtsmX
9y/hKwa14fcOLslnx2/DT/21hF+53X1Hf8GxC9yT2vCDh5Twj2O24QMPLeFD
JmjDdx1bwu+M14aPOqaEnxm7DR95eEl+Pg6/+XCuP4L2KMemNMaj/yJtFvqf
uK/Qv5k2Bfhj3vllvPsRXGNUE45n0zocidyPHMkOdTgEuRM5ztXqcEJyn1+Z
v4OvAX8JHmX+CT4J/CL4ZfM/8CHgR8Dj9/OtzSHNJb83Jpc7ck747fuZG+bw
5vIbO0f9fhz7J7YnXAN1OI5rud7/fM+MPYv2UIlPcj74G+V/X6LN34tPubbk
GvJSG3XXnsw8FtvzxnNNYhJjE2MQ87MXS2IZY5CrS+4pp/J49yxPdOOXpP23
myOP1uGonDsHNMm/fjcIxfZxE/5uSEl+7jP77Kt2/m0SY9peYijjGZ/vmyqa
ktrSrL5r+ivT3nMtgG/t5ZuPjf1hjp3TS8xqfj1/P+vHdbTDQPQL39cnnLfj
QOJbuTNzcnNz54xzxxzyT+C5GHdbLxzH5yX8+JP0Z8S200DWpGvz7l7W20y0
p3p5p+pfs3D+Vb1wOr/6m+v4Dn2IfmsBc2r66zTRMxbsZ69Zv4n+43r22t/S
ljd/aTI33K/VV8w35K7VONQ65moyt97sRY8Ru9+4/+sH5u98if5BPzG4n71+
WJP8S1/oXqqPNB9epInv/GO/bMJ5m2sbk/2hRfaz12/ZJN/btIQbHIn93SY5
q9y5Oa257LzOWca/1Yu+sxD2UfQ3a5Ivz9f5Tv2Zfm3KfnyhOtm+A/n9+k/9
l35MnVS91HMWaKKLqI94D+81eT++Ut1mn4H8Hv2r/la/O04/vlhdZs+BXMNr
+UzqkUs12cuNAZbo9o+6F41FrcWYztjOPWZEt9+0vWioaqn6RPVNdU59pb/T
a0/MsS26+HnyOj7RbzCENmn3jfxWvlffr8eGNvF56mPqZPrCzZtcy2f23Xn+
zFV8+B/j/Y11NLkNmmhOvj+PGb/r89Tv1PH0hfp0YyN5GH29PnT6LlfXt+7Y
xJeaw8vneP+Zqvh8f48xgrGavIqxgxybOY98j9zbgh1XMGWdeFwNzXjGd2D+
YLyuTU5h6yYciVqFHIHxgvGK2p0c2MX9cGByYWom+mNjpD9ipV70jh/b5CZq
gvLvP7fJBdT05MeNv24ryXeND79uM3ecQ0e0WZeuzzG4x3rGzk36rmHX8lUl
+4FrfqbOPk2VmMHxarSX1tHM1W6NN0eW+D/jFeOz68DfVvEHcqpqR0tX4Vrl
YNXelqnCzRq/qB2rYV/ST4zpt3cNHNWGU5UrM+Yw9visTa6mJqneJedjDvNO
Fe7UePAa8+Aq/sYY1lhWTVS9zZqCq7nehVVqDdRgL6mjgavNqnFfU0ejVvt+
Vs6qDodzaxNO7+Q6NQxyfc+AD6rDCd3chHOXe5cju7FJnm2+LUfda8LRy9Wr
MV3fhL+znmDZEn7TfHnSXjhFuUU1KLUofaT+SY5erl6N4/ImGoFagRz+lU04
qRPqaKRyVXJOJ9bRdOWi1NCOqcNpqq291ERvXdm9fSCc3vHYD6vC9anRHV2H
M1W7W7SEuz4U/GgTTUJtQs3iavA/wIfU4Rxv9/014XOXKeFr/9WkvmCVEv77
jSZ89tolfPI7TfSXjUv036+a6Dfb6vfBPzXRd3ct0UN/baIn7V6il77dRH/Z
CDzHQOob1N+2KuHf3cPdyzcpqW/4tIneOrSET/+sif45rIQ/V/M7qg4nrBb4
WxP9ZI8SfbTXJjbYB7w4+M0m/Ps6Jfy178h3tQh4xoHof/LZ85XUc8iPq+ft
WaIPWp+gXrBuSX3JN030pu1L9Khvm+hpO5ToVb800dt2K9EPv26iR21Xoj/t
30S/+Y3f8Du/5TnaoXU46jubxE/GYmo+dzep6RhRp+bDWg9rAM6rU5NjbcCq
JbUhfkO/pZrFM3U0BrUMNYbXje2qaA/W+JxfpybF2h81nqfBD1bRfo4v0cbM
kc2Vrcm5oE4NjrU6avzngk+pov3LcVt745px7Vjjcm2dmgNrX6xhUWv1m/vt
reG5rk7NgrU9B5RoYcb4xvrW/NxSR6OwFkiO/4w6NSly/9aIqN34Tfw2agKn
1akhUStQQzi9Tk2H2oI1EffW0XSslbAG4p46Gpe1Eda83A2+sUotjBy32q4c
l1yXmpFaqhqVWpIct7UBahpy33Lg1hKoMcmNy6mr3cqJyI2oeap9qile2oSD
VxtWE5Ob9xur6Roz++3VoNVWnJPOTWsKjqyjKVhroIaiFqwGpraiBqZ2Kgcn
FzcR7cxeOPbSRONRm3ZOO7d3LNF+nbPOXTVOtU410AubaIx/q1OTpfaoZqe2
O6QKV6NmcVKdmiO1DDU7tVg1XLU8NVS1VGukLgavwZy/u4RfPpnvO2E/ubY+
UF+4exPtSR/4YRtO1VoNc0q5Vjlbaw/M0eRy5XBe6+az3I41R9YeWXMhX2M+
bq45lWuwCYdrbYE5otyu+by+UU5rui6fNleVwzW/lmO2tsScT+5ZjtlaFHPW
KTv+QG5JfUDueaY22oU1SNYizdxGuzLHeLONPmqtjT5Hrtec2/X4QpVcXH3P
Wic1HrWej+rw3vLf1lpZD2Htnt/0lTacnLUe5shydXLW1lKYs8ply3m/2q1f
uXA5a2tjzHnlsv0ez9bJoc/rJ180NpAzlB8wP9RXm9PJH5iDWwsg52dubo5t
LYMc3vjd91TrlWOWP9lyIBqI/PH54DkZM3kVzv9uuRb5pV44CH//OW24R2tk
nmujX8s1qwmpDZmTP9ntDxN0+9PT3f7mfmYOb22DPsfcXg7CWgZ9gtyEOftD
3fw3l5fze6rb79zf5ASsTXLPliuQk3C9mC/LVcgxqJ3r4+Qe5ASs3ZBzlytQ
Q7DW6LEq2oL6mbVoal5qX3L6v5fw935/NZ1xm+R/aj1qiGqJK9LupX9cm9rI
FcD3tNF8366SU1oPN1cb20y0C9poqO9hXwl8H/2521xLzUftZ542tjFoJ7TR
6NUTlu6l/mvbjjPxG6ntnNmmtnKpXuoT/9yGC5ITupT+NgPhgeSD7mqjie3W
7T93NKm5s/ZOTnZkE07f2ko5cLn+OdqcK4dwWRvNYGi3n43o/MHd3f6sP1JD
GNLtp2oLzqfl3dtox7aJMY01l+/m18g2WpQapnqjmoc53IxVuL7Z2vx2NS21
LTlJc11zFHOVBdrktuZA5kK7GBP2UrOo3j6rz1SlhtNaTuf72yXvyHc1S5va
NmtMrTU1h5dnl2//oLNfRn8y2ultchZzF49Zjypnb445QxXuznpJay3V/NX+
rYkaVYVzsJ53+EB4EfmR27rn89v9mXZxmxpL9ajFe6nX9PdPVKUGcFS3X3mu
HMtFbfazJejPRruwjQasFuwx6yvlNNQV1RflOtQELirhtOW2vYbXUoNSv1dz
/NK8tcp89Jv77dU4Hm5T3+FcHbsK/2GN5DRVuAu59yPb6Bcf1+FX9m4TGxhT
GFtYU2x+aC4vV239iXuZ38j4Xr35j72pij98v+TbM/QPfscaTvNZuQq5betj
fHfSZPIp+7Th3oxJjE32Al9aJYYxltm3zVx1zhpL7Ncm1jDGMNb4C/iWKjGI
sYgcnlzgNiXcXtVdf+8Srm6PNrGTOY+5z/5t9iL3JH35nm1iJ2MsY63d2+RG
5lDmUnKMcoMblnCPzkn1aPdk5+rsbfQjv6Hf8qJ+apGdo85V6xXdux3jfmz9
l9qd1/hnGx/+SBUfoi8Z0Y8v1qfp29Zvk2uYo5mrbdAmtjUHMRcZ2s9eYcwy
PePXa5PLmbOZu/l95N6c42pf1pzJn7nnuPeYb6tPrtGEb1GX0pdPUYVvfr1E
a1fDVl9+w7ygl/1NPtj8XD1yrSZ8z5sla8M1ona7YZvY25jc2Fy+1712rCr8
n1qCsYLzWT77gn74ZvdQ91I1TWuF1fjUOndr873N0c3V5WjlVgeXcLfjdN/3
yBItQ05EbkQ+6Pc2+sUlJRrASd37N5YaVx9J/6A2sYTv31hfPdf6I324fKr5
ufrtKk34J2vCrD9wz3DvUA/0+xsDyN8eiP3hKjmEuYR7lHuVHMT7nT8xthqz
8zfuEe4V1pxZv2GNwAcl6839VZ+h77CG0PmzK88xVi8auPVG6mdyI34j9TTX
u9qCNU/Wu7jHu9ercT7a+Tff/aDOX+oP/fYDnb/ctQ0XIocgl3BAm1jBmMFc
Z7s268OcwtxiizbcuTm4ufjmbXJxc2xz7U3axN7G5Mbmm7bJPY3Jjc23ahMr
y0HIRQxtExub45vrD2vDTRgzGztv2YYLMKc3tx/ShguQI5ArkNP3eVYq4fo3
a5Prm/Oa++7ShhsxBzIXGt4m9zEHMxfbpk3uY05kbrRtm9zJnMjcaGvwMVVi
fGP97dvkkuZ05nY765Oq5Hzmfju2yRXNQc1Fd2iTi5qDmovu1CY3NKc0t1RT
t5ZczVetXU5Pbk/Na55+ct4l6tQwmQu7pt8t2WNc68ZHakh/rOd+9ny5deeE
c8OaA/mnpavkZ8ZXcjru9yP70dw3q6NBq8Wbo1s7OrJK7i5HYC21+ajcgZq+
tV5LVdH61bDln+WTzd+sKbAWy5oDaw1cM2+VxKiuJTVwa1nN8dXG1bTv7PIr
tW45BH2VPsv8y/Whjq+ef79720Bqk61pUsuwBkE+Uv5N/lsNRS3lHnOxJjUD
1pqtUKWWwJoPa13lJKwFUWO3NnT5Ktq7NQfWhq5YpRZBf2wdjvU4j7WpkbD2
zJoHayfU2MwPzYfNx+UsrJ2VA5LLkCOSbzqsCt8gh2Ttn/mq3JKckbWIckxy
SfL1zi3nmPyeHI98hfyB3I+cjLWF8gdvdnyGa8M1Ir8g5+T/HshvyEXJybkW
XZPyDdYYrF6HU7H2YME23L+cuNy4HJNrxTUj/yBndXkdTkouS07J2kz5BLmm
KcE71qnhuK6JhmStp5yY2pKc0m11ODC5Jjmts+pwdnJdcnbH1uGY5PLksKwN
lYOS25Jzkj+Ub5SL0gfqC82f5QG27nyaOenBbfJBfZQxrbGtfJ98pXymfKCa
iBy+fLzaujVs1rINN2ZpornI+8v/q41bI2CtwDbYb2uiiagZyK+rresj1Crk
dPUdcuxy7eo1v7bxuWodct76YmOu1ZrUlxiLyQH6vxGXV+EG/R8s/xdra/BN
Tf6Hyv+l2gp8Q5P/CfJ/g6zpuKxJjYe1qvIv1n5Y42FtrzU41n5YE2JtvzU+
1opYMyJfI58iP+H/1Pi/NdaMXNEkhly5Sb2bsaWcnLX9coxydXKU/m+HHKPc
pRye+tKFVfgR/4fJ/2WyJuWSjj8x1jLmki9Sc1F7UXP5pg2HKP8hnyJ/o4ai
luKc/KpNTZH/m6GeYK2Rmr36gnqDfLo1Tf6vhv/DYa2TMenqTep9jFXlIN3r
3fPlv/yfJv+3aQj4qiY1MNZqWxNlbYwan1qfNQXWFqgBqjmoH1h7oCajNmPO
80WbmEgtTA3DWMn/4ZH/GVpFl7WGyv/lUC+xtur/VUQcNw==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt13fcl+MaAPBf/Xrf1wiFo705HIkTKVFKu7S3tnZpaZe3vWnvEhmlHCqi
RQpFpWGlYSTryDEOHUdE8r0+z/vH1e+5vvd1P+8z7vt+7kp1Hdh8QO5UKvW+
yBCj/DMgnUqth6vlv+VJpbqwqmwMG8r2ss6sCstmQ9gedoKtypVKFXR8Uttm
eVtxs+PB6vqo265tTmYqNY+dZEdZETX3s25sI3ua/aBuJO/P1rFV7Fc2SF1X
9jxby75ns9gcdoJ9wArpN5vNZZ+yI6wwG8juZc+xNexbfdvw8qxMVir1kvxl
UUxdU78f8tvdT3F5NZGSN9G3tsMHtD+p7w3aU47Pa3tMTSd2m+OR6gZp2q2t
CG/s9zivrL6ofIC6lvKF6maqO6m9P2/HnmYr2ZesOsvFmrI6LJu11/dWNoz1
Z6+xPuqas8fZUvYx68fuYWvZo+wLdq++d7KxbBjbxwao68I2sKfYd6yjukps
BBvIdrFurDobz0aw/ew+fduyNdFXfCsfqK4VWySfpe4zdR1YRTacDWCvx32o
vZ71ZfeJYt5BV3XV2Dj5cHVvqaui7jd5PVGNDWO3szPxTERVNpRVZD/JbxM3
xfuNd8F+jn7iVvZL3D87L28sarHR+t7BfpXXFXeyIawq+1PeSDQUG+W3ih8d
VxI3qvsm3oW4xfEdYfr9KK+s7v/y6qJijF22kv3g3h4VX7EH2bXsUjVt9Csb
Y0p+sfhW+zvq6rO88oJqD7NZ7GWxgpVjhVk5/b9iL8kL8LPsqLyhvgXlT4hr
HP+Lnda2RF0hds7xMdZIW2H5jaKoc/WQVxar5LeoPc1a50muM663EvvFcfc8
SX30S4n/GtvV2RMxvuIZiNs11VRThZ+L5xTXEu87zh/vOWrEHepqxXuKuSTv
Ixpqn8kmxf3wHqwWm8yy4/mwnqw2m8LGsHfjXcba5Lh2rDny8v5mf9ZU3Vw2
TdtHMT9YEzaHTWUfsu7sLjaBjWQHWF/WiM1ik+OZxbhnjdlsNoUdZ71YHTaV
jWXvsXasAhvK+rFXWW9Wl01j42LtZel41p7f+/xZsUy+Qt0f2j+XfxHjhpVl
3+n3mbyk+uUxr+JvqKvCyzvXaXmG2lqOP1B3RtskdlFmsp59FGuzeDjWYbHA
8ef6HldXTF0PVpPNZzPYQefJwyroezi+DWK5PFPU1XYknYy5Kfo2E2XTyVxe
r21DvCN19dlS51siPpc/JB5kx+Vv63ulfr1Yg7h3Nocd1rc2v5w1Z/XZ7Jxz
xrk7qL9B21t+X5BvFJ1iHLMDfveKPZnJOhPXtC/uK56D4wbOV8P5punzTMyN
eFfa/6HtTb/Py5+LdTDmGdvvd6FY4vjf+n6sb8mM5N7qsenxrMR17nsRW8q+
ln+irpS6uWw++4wdY0XZArY41gL2ESvB5rNF7Ev2ISvOFrNl7BQ7wUqzNa7t
KdFW27Xadvs9yM86flUs8K6OyGvEWEgncyHmxAR9HmDZbDt7gWXJt/Gt8X3I
TL6Hb/ttzf/puHRW0hY1rdhNrBTbLN8inhZrxT36XKftDb93qcuTTuZ0zO3x
2qux3KwGq8zGsk3ixdhPZCbnPei3urp0Olk3Yv0Yp70Wu5jdzWqy6fE9ivGc
Tp57PP+jmcn1xHV1yUyu/VDsF2JuOZ6oZpS+O7UvYcvZN+xTViYjOV9lNoqN
Fte4x5lsNvskd7L+xjrcIiMZEyWykjEXY69lRjLuSmYl9xP3dYwt8R6ucnxK
2075bvF9vK90snbvyki+M+fiOxbfHnFe3pBfo6ag863Sf7Woz0qzrmru0fdR
dje7mhVQ95j8cZHNxrBX1L2o7gJ5A1GGdWPt2Ep19eL7wdqx5vFdiPnmb+dN
J9+7+O5lOW+F+B45vl6sdz9f6vcAG6ZuE9sc166uEf87K5SVjM0Yo1ViTMZ7
FDf7GyPYYH17ppP9QuwbKqivqu733Mk3NL6lI9XtYXn9vW1qf4p5Gd/uWBNz
J2tdrHmj1DXPSNaB4lnJnI25W4ddwVqoa6BuTqwP8Z1xvo9jrxbrUezzMpI5
X1TfZ9WsE3XZlaylvnfrO5c1zkjmWeGsZKzHmG+SkYz3IlnJ+vFMzn6oTTpZ
52K9K6etL2vBnpAvc74TOe8z3mubzOSZ7fJbJ/YCjjuqa6FuhvYx/sbMWM/Y
LlZAPloMZS+yZ1PJxn2cvqNjjWM7Y0vKZrDp7Cg7yC5n09hU9gHbz/KxB9kM
dowdYlewYawv28Y2sJ9dywg2KMZxvHN2Nq6PjWR72Csst77DYw/IdrBN7Hd1
Y9kotpftiK20upHs/liv2Bb2h7pRbDB7jW1l5+I5syKsPesg8num09k0dkR+
QF1+55vKprDD7H1xNjMZa73SyRiNsXpaPkT0Zlvk6/Q97W+sjLFrbOR3nC/m
kZoRrF98j9U9qe5MfLt5sxg/8S1jn7ChrA/bGvOD/Y9NZhPZu2wvu8S5JrEJ
7B22h+XNuebJsR6wN2KP696msEnsPfk+dZeqG8/GxvrIdrOL2AQ2Lta46Msu
ZBPZ+Fi/2ZvsYtad1WDzYp1kh3LWiVgvWmcm68zrfrPjnmOeqduuLlfOPB+e
Tq4trvFMnEtksdaxRqib6Dx3xX6AtYq9cuw3WE12AWvDGrPJrAH7G+vO2rP5
8fz8nc5sJVvM/sOGsE6x52GLYp/NhsfehK1mj7Cf4rvgfBeytqxJ7EFi/rLL
WCfWMvbZbFg8B7aKrWA/xvqnLh/rzFqxh3LWv0vSyTiL8bYt9i4iP+sS+2B1
M2PNYSVY/Oe5O1se3wBWig1iPdkKdlnsafy+l072d/nkjWI/L++lrpO6hdob
sgKsJ+vIFsSawwqx3qwzW5QzF4qmk/8vxf+bdsScdG+t2WL57NgvqmvKi7F+
rCtbGt8KdhXrEfOIzWNPxn49vuuZyXfktZgzztfR8SPqFqo7pf1+1oGtYAvY
1+wRtdvjOyNOsqvj28hKygeq68EeVteMFWf9WTe2jI2OeRjjLp4x+5P9BWO6
CtU=
            "]], Polygon3DBox[{{1591, 755, 574, 573, 1076, 1524}}]},
          Annotation[#, "Charting`Private`Tag$78337#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rtL1lEcB+CjeTcvGCFCKRFhDto/UKOTTU5Sm5sN3gcbQ0IjEZUoaEhM
dBAbzLRFc7BRrbybdysv4VhQKeJzaPi8z+d8eX/nnN/Le626rrI2IYTwRl4p
sVf5OOYn1iaFkKuf6llSZ11k3cAyNvMOW3mXPbzP1+yXB/oUH3KO7dzkCx5z
kCccY0ZyCB/ZxVxnLcqC9SyLZSPRLD7PJW5xmdtc4Q5Xucs17vGbfNW/c50/
uMF9bvKAWzzkNo+4ww8XQshz5pLsxrvzptxwt3nrfE4zje/41zsM8Cefc51t
nGELJzkhNXov78X3ZAUf8TYbWcp6FrLD3pnOfC851m3MkHG55Z7ZZo/1NBmT
MrOsuJ+eHO9rnwVeNPvHRLliNspMs5ec9p7X+TbubdbCEbMzfV5PZ6pnmvQT
/Us8j+Vmv/U/+jBLnJ2qP9OvylA83yzFrEb/xWLPfI5307tZEBN/NyJ0csrZ
+ewXNTzlZemL97fO88Un+qWE///Xc3bYXVM=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0EdOXFEQBdAHIqyDCTlKrIQNECQyaiSvwRMMTMixm8wGyGBMMNkm55xB
rILTg6Nbqvtq8H9aRWNJJCGE8INIUgg3ySG8c0sbU1zzlRjCkNzmlB3ameaO
dIbZ5Yw9OqhMDWFG3pPBCP845z/jKSF0yQceyaSTDz5pcD/iTbd5lieyGGXI
vkZ/Yd6nhzmeyWaMMv0feckKvbzwSrH7Ov1P8ypXrNHPPG/U63NkHwccMkDU
bakuN/4NHHHMIFX2CzKPCdb5G5/dROUi+TSxQbX3Md0v8xIFxOL/065Wd2Ju
5jeFTFJuvym3aGWZIlr4BlugTDM=
        "]], Line3DBox[CompressedData["
1:eJwV0EdKg1EYRuEvmmLvvSe6At2JcxWiYyNqdGYsWEaOLQtI7G1XQRSRIKKI
TwaHc9574Yf7Z/OF+dVERCyhkIzYTUVU0ZqOaMN6JqJiJ/Qev6JdLzjv4Cu7
gff5DRvOO+0uXNuNfI4y3u1u7sGNTvIFKviwe7kPtzrvOyl9oD/Rrwdwp5fd
pfWhrmFQD2HT+b2d0Uf8hWE9gqK7B7tJH/M3tpyN2mN4tJv5hH+w7W7cnsCT
3cKX9ffi157kKTzrs/pb8aeznMOLXvGNHQ57GjM4tRedl3jOnuU1//0fzr8q
8w==
        "]], 
       Line3DBox[{1137, 1513, 1589, 1901, 1573, 1515, 1590, 1902, 1574, 1517, 
        1707, 1331, 1575, 1699, 1708, 1332, 1576, 1912, 1520, 1333, 1577, 
        1913, 1522, 1334, 1578, 1914, 1524, 1591, 1903, 1579, 1526, 1592, 
        1904, 1580, 1528, 1593, 1905, 1581, 1530, 1709, 1335, 1582, 1700, 
        1710, 1336, 1583, 1915, 1533, 1337, 1584, 1916, 1535, 1338, 1586, 
        1917, 1585, 1339, 1138}], 
       Line3DBox[{1140, 1594, 1788, 1139, 1595, 1789, 1141, 1596, 1790, 1142, 
        1711, 1340, 1143, 1712, 1341, 1144, 1713, 1342, 1145, 1714, 1597, 
        1791, 1146, 1598, 1792, 1147, 1599, 1793, 1148, 1600, 1794, 1149, 
        1715, 1343, 1150, 1716, 1344, 1151, 1717, 1345, 1152, 1718, 1346, 
        1153}], Line3DBox[{1155, 1601, 1795, 1154, 1602, 1796, 1156, 1603, 
        1797, 1157, 1604, 1798, 1158, 1719, 1347, 1159, 1720, 1348, 1160, 
        1721, 1605, 1799, 1161, 1606, 1800, 1162, 1607, 1801, 1163, 1608, 
        1802, 1164, 1609, 1803, 1165, 1722, 1349, 1166, 1723, 1350, 1167, 
        1724, 1351, 1168}], 
       Line3DBox[{1170, 1610, 1804, 1169, 1611, 1805, 1171, 1612, 1806, 1172, 
        1613, 1807, 1173, 1614, 1808, 1174, 1725, 1352, 1175, 1726, 1615, 
        1809, 1176, 1616, 1810, 1177, 1617, 1811, 1178, 1618, 1812, 1179, 
        1619, 1813, 1180, 1620, 1814, 1181, 1727, 1353, 1182, 1728, 1354, 
        1183}], Line3DBox[{1187, 1729, 1355, 1185, 1730, 1356, 1189, 1731, 
        1357, 1191, 1732, 1358, 1193, 1733, 1359, 1195, 1734, 1360, 1197, 
        1736, 1737, 1361, 1199, 1738, 1362, 1201, 1739, 1363, 1203, 1740, 
        1364, 1205, 1741, 1365, 1207, 1742, 1366, 1209, 1743, 1367, 1211, 
        1745, 1369, 1213}], 
       Line3DBox[{1212, 1368, 1744, 1210, 1827, 1633, 1208, 1826, 1632, 1206, 
        1825, 1631, 1204, 1824, 1630, 1202, 1823, 1629, 1200, 1822, 1628, 
        1198, 1821, 1627, 1735, 1196, 1820, 1626, 1194, 1819, 1625, 1192, 
        1818, 1624, 1190, 1817, 1623, 1188, 1816, 1622, 1184, 1815, 1621, 
        1186}], Line3DBox[{1215, 1634, 1828, 1214, 1746, 1370, 1216, 1747, 
        1371, 1217, 1748, 1372, 1218, 1749, 1373, 1219, 1750, 1374, 1220, 
        1751, 1635, 1829, 1221, 827, 1222, 1752, 1375, 1223, 1753, 1376, 1224,
         1754, 1377, 1225, 1755, 1378, 1226, 1756, 1379, 1227, 1757, 1380, 
        1228}], Line3DBox[{1230, 1636, 1830, 1229, 1637, 1831, 1231, 1758, 
        1381, 1232, 1759, 1382, 1233, 1760, 1383, 1234, 1761, 1384, 1235, 
        1762, 1638, 1832, 1236, 1639, 1833, 1237, 843, 1238, 1763, 1385, 1239,
         1764, 1386, 1240, 1765, 1387, 1241, 1766, 1388, 1242, 1767, 1389, 
        1243}], Line3DBox[{1245, 1640, 1834, 1244, 1641, 1835, 1246, 1642, 
        1836, 1247, 1768, 1390, 1248, 1769, 1391, 1249, 1770, 1392, 1250, 
        1771, 1643, 1837, 1251, 1644, 1838, 1252, 1645, 1839, 1253, 859, 1254,
         1772, 1393, 1255, 1773, 1394, 1256, 1774, 1395, 1257, 1775, 1396, 
        1258}], Line3DBox[{1260, 1646, 1840, 1259, 1647, 1841, 1261, 1648, 
        1842, 1262, 1649, 1843, 1263, 1776, 1397, 1264, 1777, 1398, 1265, 
        1778, 1650, 1844, 1266, 1651, 1845, 1267, 1652, 1846, 1268, 1653, 
        1847, 1269, 875, 1270, 1779, 1399, 1271, 1780, 1400, 1272, 1781, 1401,
         1273}], 
       Line3DBox[{1275, 1654, 1848, 1274, 1655, 1849, 1276, 1656, 1850, 1277, 
        1657, 1851, 1278, 1658, 1852, 1279, 1782, 1402, 1280, 1783, 1659, 
        1853, 1281, 1660, 1854, 1282, 1661, 1855, 1283, 1662, 1856, 1284, 
        1663, 1857, 1285, 891, 1286, 1784, 1403, 1287, 1785, 1404, 1288}], 
       Line3DBox[{1290, 1664, 1858, 1289, 1665, 1859, 1291, 1666, 1860, 1292, 
        1667, 1861, 1293, 1668, 1862, 1294, 1669, 1863, 1295, 1786, 1670, 
        1864, 1296, 1671, 1865, 1297, 1672, 1866, 1298, 1673, 1867, 1299, 
        1674, 1868, 1300, 1675, 1869, 1301, 907, 1302, 1787, 1405, 1303}], 
       Line3DBox[{1317, 1425, 1884, 1693, 1316, 1883, 1687, 1315, 1882, 1686, 
        1314, 1881, 1685, 1313, 1880, 1684, 1312, 1879, 1683, 1311, 1878, 
        1682, 1310, 1877, 1876, 1681, 1309, 1875, 1680, 1308, 1874, 1679, 
        1307, 1873, 1678, 1306, 1872, 1677, 1305, 1871, 1676, 1304, 1692, 
        1870, 1423, 1424}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{552, 1021, 1022, 970, 1024, 1023, 1896, 1045, 1025, 1026, 
        981, 1092, 1890, 1091, 1074, 1072, 1114, 1913, 1073, 572, 764, 1713, 
        587, 779, 1720, 602, 794, 1725, 617, 1820, 809, 1734, 632, 824, 1750, 
        647, 839, 1761, 662, 854, 1770, 677, 869, 1777, 692, 884, 1782, 707, 
        1863, 899, 722, 1875, 914, 737}], 
       Line3DBox[{553, 998, 999, 971, 1001, 1888, 1000, 1046, 1027, 1028, 982,
         1095, 1891, 1094, 1077, 1075, 1115, 1914, 1076, 573, 765, 1714, 588, 
        780, 1721, 603, 795, 1726, 618, 810, 1735, 1736, 633, 825, 1751, 648, 
        840, 1762, 663, 855, 1771, 678, 870, 1778, 693, 885, 1783, 708, 900, 
        1786, 723, 1876, 915, 738}], 
       Line3DBox[{558, 1038, 1039, 965, 1041, 1040, 1897, 952, 929, 989, 1892,
         930, 1088, 1086, 1128, 1916, 1087, 580, 772, 1717, 595, 787, 1723, 
        610, 802, 1727, 625, 1827, 817, 1743, 640, 832, 1756, 655, 847, 1766, 
        670, 862, 1774, 685, 877, 1780, 700, 892, 1784, 715, 907, 730, 1883, 
        922, 745}], 
       Line3DBox[{559, 1007, 1008, 975, 1010, 1889, 1009, 953, 931, 954, 1886,
         932, 1131, 1132, 1133, 1130, 1917, 1129, 581, 773, 1718, 596, 788, 
        1724, 611, 803, 1728, 626, 818, 1744, 1745, 641, 833, 1757, 656, 848, 
        1767, 671, 863, 1775, 686, 878, 1781, 701, 893, 1785, 716, 908, 1787, 
        731, 1884, 956, 957, 958}], 
       Line3DBox[{732, 909, 955, 1870, 717, 894, 1858, 702, 879, 1848, 687, 
        864, 1840, 672, 849, 1834, 657, 834, 1830, 642, 819, 1828, 627, 1729, 
        804, 1815, 612, 789, 1804, 597, 774, 1795, 582, 759, 1788, 567, 752, 
        1901, 1106, 1108, 1107, 560, 749, 1906, 1097, 976, 1014, 1013, 551, 
        746, 990, 966, 1012, 1011, 1042}], 
       Line3DBox[{733, 910, 1871, 718, 895, 1859, 703, 880, 1849, 688, 865, 
        1841, 673, 850, 1835, 658, 835, 1831, 643, 1746, 820, 628, 1730, 805, 
        1816, 613, 790, 1805, 598, 775, 1796, 583, 760, 1789, 568, 753, 1902, 
        1109, 525, 561, 510, 1885, 977, 349, 418, 1501, 318, 967, 346, 395}], 
       Line3DBox[{734, 911, 1872, 719, 896, 1860, 704, 881, 1850, 689, 866, 
        1842, 674, 851, 1836, 659, 1758, 836, 644, 1747, 821, 629, 1731, 806, 
        1817, 614, 791, 1806, 599, 776, 1797, 584, 761, 1790, 569, 1707, 754, 
        1110, 1065, 1112, 562, 1099, 1907, 1098, 978, 934, 1016, 1048, 992, 
        1893, 991, 968, 933, 1043, 1015, 959}], 
       Line3DBox[{735, 912, 1873, 720, 897, 1861, 705, 882, 1851, 690, 867, 
        1843, 675, 1768, 852, 660, 1759, 837, 645, 1748, 822, 630, 1732, 807, 
        1818, 615, 792, 1807, 600, 777, 1798, 585, 1711, 762, 570, 1708, 1067,
         1111, 1066, 1068, 1089, 1703, 940, 979, 939, 1019, 960, 1018, 1701, 
        936, 969, 935, 1044, 1017, 1049}], 
       Line3DBox[{736, 913, 1874, 721, 898, 1862, 706, 883, 1852, 691, 1776, 
        868, 676, 1769, 853, 661, 1760, 838, 646, 1749, 823, 631, 1733, 808, 
        1819, 616, 793, 1808, 601, 1719, 778, 586, 1712, 763, 571, 1070, 1912,
         1113, 1069, 1071, 1090, 1704, 942, 980, 941, 1020, 961, 1900, 1061, 
        938, 1062, 937, 1054, 1050, 1063}], 
       Line3DBox[{739, 916, 1877, 724, 901, 1864, 709, 886, 1853, 694, 871, 
        1844, 679, 856, 1837, 664, 841, 1832, 649, 826, 1829, 634, 1737, 811, 
        1821, 619, 796, 1809, 604, 781, 1799, 589, 766, 1791, 574, 755, 1903, 
        1116, 1118, 1117, 563, 750, 1908, 1100, 983, 1030, 1029, 554, 747, 
        1898, 1051, 943, 1056, 1055, 1093}], 
       Line3DBox[{740, 917, 1878, 725, 902, 1865, 710, 887, 1854, 695, 872, 
        1845, 680, 857, 1838, 665, 842, 1833, 650, 827, 635, 1738, 812, 1822, 
        620, 797, 1810, 605, 782, 1800, 590, 767, 1792, 575, 756, 1904, 1119, 
        1121, 1120, 564, 751, 1909, 1101, 984, 1034, 1033, 555, 1899, 748, 
        993, 962, 1003, 1002, 1031}], 
       Line3DBox[{741, 918, 1879, 726, 903, 1866, 711, 888, 1855, 696, 873, 
        1846, 681, 858, 1839, 666, 843, 651, 1752, 828, 636, 1739, 813, 1823, 
        621, 798, 1811, 606, 783, 1801, 591, 768, 1793, 576, 757, 1905, 1122, 
        1078, 1123, 565, 1103, 1910, 1102, 985, 946, 1035, 556, 1887, 995, 
        994, 972, 944, 1057, 1032, 945}], 
       Line3DBox[{742, 919, 1880, 727, 904, 1867, 712, 889, 1856, 697, 874, 
        1847, 682, 859, 667, 1763, 844, 652, 1753, 829, 637, 1740, 814, 1824, 
        622, 799, 1812, 607, 784, 1802, 592, 769, 1794, 577, 1709, 758, 1124, 
        1079, 1126, 566, 1105, 1911, 1104, 986, 948, 1037, 557, 997, 1894, 
        996, 973, 947, 1047, 1036, 963}], 
       Line3DBox[{743, 920, 1881, 728, 905, 1868, 713, 890, 1857, 698, 875, 
        683, 1772, 860, 668, 1764, 845, 653, 1754, 830, 638, 1741, 815, 1825, 
        623, 800, 1813, 608, 785, 1803, 593, 1715, 770, 578, 1710, 1081, 1125,
         1080, 1082, 1096, 1705, 950, 987, 949, 964, 1005, 1702, 924, 974, 
        923, 1058, 1004, 1052}], 
       Line3DBox[{744, 921, 1882, 729, 906, 1869, 714, 891, 699, 1779, 876, 
        684, 1773, 861, 669, 1765, 846, 654, 1755, 831, 639, 1742, 816, 1826, 
        624, 801, 1814, 609, 1722, 786, 594, 1716, 771, 579, 1084, 1915, 1127,
         1083, 1085, 1706, 928, 988, 927, 951, 1895, 1006, 926, 1059, 925, 
        1060, 1053, 1064}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
8P8AE5o7Ng==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7773118209869328`*^9},
 CellLabel->"Out[140]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzFfXmsXNd539XdZubNe6QtcREl2pbM9x5JiYuoZ0t2JFGyRfJxEylx02ZJ
lmWtlmPHdhxnacrEzr40bVoEtGzLthzbiZ0mVpZmTxwnbZqiQIGiQFGgKFAU
TVEUKAoUBfrX9Hzr+c65373zGAsogXmcuXPvnXO+8zvf9/uWc+4DT3/ihWc/
/PQnXnzm6ZvWP/b0R1948ZmP33TsIx8Lh6priuKaF8Lr7TcVdXg/K4rOnxeL
YqPv/xv+bWbPPfdcYf7h5xLeVfD2k/bkKjm5GrjB9///uOy/ppfh/838y/4W
/pRwZAMne02r9RBLC8V8jR591hztufsH38hT/i+18fKzzz6r3w+Jjy/7P3QK
XAaH5YW3qedf/r/jr8qlhKN4LN7KyuV/eRfCp8r54mW65n/CHxyzok76CYfh
QKnv6Lf0pJfopP+Bf2t7b3jfpD9ZaFtJgHAc78R3+e+xGam4R07HuTVyH7yK
7/O3fmsWqRPdPvEU/i/+ZZupVXJyFXuhbXyebvCfHQlfSzeFy2eXz09na2tr
ehe83wt07X/yf/w6PNxcfs/N1+AtZn90w+z1V94bhx7vwb//H53f30Y3mB3Z
VdEN/uYts8vPbzazOe0KC/0/8O966N2O37WzI8t8y7/aOZv9y7fg90VhmsXg
/vd9w4onUQPH2MOjcsc/v2E2+8sb8VcvP7spvStf/+98gd1IP3b/rqoYzY7J
/f7sxtnsOzvpfh/chJPe6/wzdOt/29dgc/MJSvTYCo3s7E/DD3ybGgziuPwM
Ntq0mqf1v/Fb/VY8vAR3xvviKzR+Xe7/xzfgb+D9vx3E/RfhN57Of4Ob/6/9
33ibNr6E+xdT/AUQ+fJ15ezy44uz2R/cgL+EvwI9CmK7/P6ly33iepp+71/R
Vwnsbo6S2qy9OcqvY/Kbj4Xf/L0d4Xd30G8GcF/51G6YI/B/1rsP0K/9td+7
t9PhXIL4g8XibF1+8tHwk78bfvKf0U+ePn16duWTq9T1P7wBhJ2ijfv4z50+
Lg/9ZBt6WeP4rfDPXvn4KvSsnL3+i/eWoQE3BGnCz15+31LsaaYs30+//h3n
17F1yzwqd916o/x8Qb8/RikDPuF1nNuxY8eO2ZWPrcxmv70jtOMX7g3NRGn8
3g3QoNns97U5pS9mbtC34wxp7AzRxu/iFh86dIgapw2bJA0DAZ1YDY3bEoT0
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
v6YrIiurHbn+Df9/zf8D02tp1w==\
\>"],ExpressionUUID->"c91d3910-1388-48c8-9b1e-d4811887ab9b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
4.  Analytical Solutions to ODEs that represent steady-states of reaction \
diffusion PDEs\
\>", "Section",
 CellChangeTimes->{{3.777046844145652*^9, 3.7770468687908287`*^9}, 
   3.777203880854248*^9},ExpressionUUID->"304474e8-c742-4bed-8789-\
61bb824e5f7e"],

Cell["\<\
Sometimes we are interested in the long-time solutions to RD equations.  We \
may set time rates to zero, and then our PDEs become ODEs.  For example:\
\>", "Text",
 CellChangeTimes->{{3.7770468832854443`*^9, 3.777046890161216*^9}, {
  3.7770470044017477`*^9, 
  3.777047033429392*^9}},ExpressionUUID->"f2f25658-6091-4080-8881-\
6e991088dc8a"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FormBox[
    FractionBox[
     RowBox[{"\[PartialD]", "c"}], 
     RowBox[{"\[PartialD]", "t"}]],
    TraditionalForm], " ", "=", " ", 
   RowBox[{
    FormBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], "c"}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["x", "2"]}]],
     TraditionalForm], "  ", "-", " ", 
    RowBox[{"k", " ", "c"}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{
  3.7770473807351227`*^9},ExpressionUUID->"8692744f-0ba7-443e-b4f1-\
6dd461c625dc"],

Cell["becomes", "Text",
 CellChangeTimes->{{3.777047047342681*^9, 
  3.7770470502217817`*^9}},ExpressionUUID->"762e4807-745d-4351-830b-\
fc49f06efd41"],

Cell[BoxData[
 RowBox[{"0", " ", "\[Equal]", " ", 
  RowBox[{
   RowBox[{"d", " ", 
    RowBox[{
     RowBox[{"c", "''"}], "[", "x", "]"}]}], " ", "-", " ", 
   RowBox[{"k", " ", 
    RowBox[{"c", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.777047053168297*^9, 3.777047064560418*^9}, {
   3.777047106602268*^9, 3.77704710683845*^9}, 
   3.777047383148798*^9},ExpressionUUID->"c21c1ee0-7be2-468b-9445-\
bf3338e6b018"],

Cell[TextData[{
 "For functions of one variable, Mathematica can recognize the \
\[OpenCurlyDoubleQuote]prime\[CloseCurlyDoubleQuote] notation, i.e. c\
\[CloseCurlyQuote]\[CloseCurlyQuote][x] is just as good as the more \
cumbersome ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["c", 
    TagBox[
     RowBox[{"(", "2", ")"}],
     Derivative],
    MultilineFunction->None], "[", "x", "]"}]],
  CellChangeTimes->{3.7770444148015127`*^9},ExpressionUUID->
  "8726aa52-167c-4aa9-b77a-d28766d8a4d8"],
 "\n\nCan we use DSolve to solve this?  We still need boundary conditions, \
but no longer need an initial condition."
}], "Text",
 CellChangeTimes->{{3.7770470768947477`*^9, 3.777047081643092*^9}, {
  3.777047154200156*^9, 3.777047170813733*^9}, {3.777203906674767*^9, 
  3.777204001304359*^9}},ExpressionUUID->"c1739456-3c91-469f-b1f9-\
85bcbc848e56"],

Cell["\<\
Can you use DSolve to solve the steady state of this, with the boundary \
condition that c=1 at x=0 and c=0 at infinity\
\>", "Text",
 CellChangeTimes->{{3.7770470768947477`*^9, 3.777047081643092*^9}, {
  3.777047154200156*^9, 3.777047170813733*^9}, {3.777047566980031*^9, 
  3.7770476275753613`*^9}, {3.777073893086627*^9, 3.777073925416081*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"c161d227-1cba-466c-bfda-3771a0dcba61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"d", " ", 
           RowBox[{
            RowBox[{"c", "''"}], "[", "x", "]"}]}], " ", "-", " ", 
          RowBox[{"k", " ", 
           RowBox[{"c", "[", "x", "]"}]}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"c", "[", "0", "]"}], " ", "=", " ", "1"}], ",", " ", 
        RowBox[{
         RowBox[{"c", "[", "q", "]"}], " ", "=", " ", "0"}]}], "}"}], ",", 
      " ", 
      RowBox[{"c", "[", "x", "]"}], ",", " ", "x"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"k", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"x", " ", ">", " ", "0"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7773116193495474`*^9, 3.777311698330184*^9}, {
  3.7773117334940786`*^9, 3.7773117445265875`*^9}, {3.777311841778292*^9, 
  3.777311893473945*^9}, {3.7773120124435616`*^9, 3.7773120164408674`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"8dda9f6d-e1f7-4465-bcff-10c820bab061"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","deqn",
   "\"Equation or list of equations expected instead of \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in the first argument \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"0\\\", \\\"\[Equal]\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"k\\\"}], \\\" \\\", RowBox[{\\\"c\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"d\\\", \\\" \\\", \
RowBox[{SuperscriptBox[\\\"c\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]}]}], \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}]\\).\"",2,142,26,
   26304610665235351396,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777311894074337*^9, 3.777312079343566*^9},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"db778569-49d5-4b02-b249-011d01cbe33e"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", " ", 
       RowBox[{"c", "[", "x", "]"}]}], "\[Equal]", 
      RowBox[{"d", " ", 
       RowBox[{
        SuperscriptBox["c", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "x", "]"}]}]}], ",", "1", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"c", "[", "x", "]"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.777311894463296*^9, 3.777312079361477*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"0073537f-f0ea-40ed-9ca1-e79ba41f6a9d"]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{
   FormBox[
    FractionBox[
     RowBox[{"\[PartialD]", "c"}], 
     RowBox[{"\[PartialD]", "t"}]],
    TraditionalForm], " ", "=", " ", 
   RowBox[{
    FormBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], "c"}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["x", "2"]}]],
     TraditionalForm], "  ", "+", "v", " ", "-", " ", 
    RowBox[{"k", " ", "c"}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{
  3.7770473807351227`*^9, {3.777047583769127*^9, 3.777047587225197*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"8437fd7a-067f-4d95-9b1f-648a7ceba4db"],

Cell["\<\
What does Mathematica do if you leave out one of the boundary conditions?  \
What if you use a symbol as a boundary condition?  How does it handle it?\
\>", "Text",
 CellChangeTimes->{{3.7770482978809347`*^9, 3.777048338782009*^9}, 
   3.777204019936709*^9},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"256c934b-6ccf-424f-8d90-0a6b96a605e7"],

Cell["\<\
What about this, which represents an example of saturable decay, as might \
occur if decay requires binding to a receptor that is in limiting supply:\
\>", "Text",
 CellChangeTimes->{{3.7770470768947477`*^9, 3.777047081643092*^9}, {
  3.777047154200156*^9, 3.777047170813733*^9}, {3.777047566980031*^9, 
  3.777047653030937*^9}, {3.7772040323724957`*^9, 3.777204054971571*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"c09d5fb1-b11d-4f49-9a8c-7a07c4b48fc5"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FormBox[
    FractionBox[
     RowBox[{"\[PartialD]", "c"}], 
     RowBox[{"\[PartialD]", "t"}]],
    TraditionalForm], " ", "=", " ", 
   RowBox[{
    FormBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], "c"}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["x", "2"]}]],
     TraditionalForm], "  ", "+", "v", " ", "-", " ", 
    RowBox[{"k", " ", 
     FractionBox["c", 
      RowBox[{"1", "+", "c"}]]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{
  3.7770473807351227`*^9, {3.777047583769127*^9, 3.777047587225197*^9}, {
   3.77704765890429*^9, 3.7770476614323807`*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"384a737f-64c6-44a1-84bb-69d9378c23b3"],

Cell["\<\
Mathematica will not always find solutions even when they exist.  Consider \
this example:\
\>", "Text",
 CellChangeTimes->{{3.777048185644608*^9, 
  3.777048203341299*^9}},ExpressionUUID->"e008b249-5a53-447d-b8f9-\
72cff5348e00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"d", " ", 
        RowBox[{
         RowBox[{"c", "''"}], "[", "x", "]"}]}], " ", "-", " ", 
       RowBox[{"k", " ", 
        SuperscriptBox[
         RowBox[{"c", "[", "x", "]"}], "2"]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"c", "[", "0", "]"}], "\[Equal]", "c0"}], ",", " ", 
     RowBox[{
      RowBox[{"c", "[", "1", "]"}], " ", "\[Equal]", "0"}]}], "}"}], ",", " ", 
   RowBox[{"c", "[", "x", "]"}], ",", " ", "x"}], "]"}]], "Input",
 CellLabel->
  "In[143]:=",ExpressionUUID->"5061ce42-8a5c-4fd8-b04e-402fba29e6c4"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","deqx",
   "\"Supplied equations are not differential or integral equations of the \
given functions.\"",2,143,27,26304610665235351396,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7773121239262147`*^9},
 CellLabel->
  "During evaluation of \
In[143]:=",ExpressionUUID->"650aa92c-6e52-4d6a-9055-087e0474a0c1"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k"}], " ", 
        SuperscriptBox[
         RowBox[{"c", "[", "x", "]"}], "2"]}], "+", 
       RowBox[{"d", " ", 
        RowBox[{
         SuperscriptBox["c", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}]}]}]}], ",", 
     RowBox[{"1", "\[Equal]", "c0"}], ",", 
     RowBox[{
      RowBox[{"c", "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"c", "[", "x", "]"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.7773121239421697`*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"5382c936-c714-4cb9-a525-d6959775e168"]
}, Open  ]],

Cell["\<\
Can you use some classical math tricks to help Mathematica out?\
\>", "Text",
 CellChangeTimes->{{3.777048351743821*^9, 3.7770483657004833`*^9}, {
  3.7772041312458*^9, 3.777204151209168*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"1bc54ac4-ce6e-4350-bc9e-4f9bdc2ad2b0"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Use", " ", "the", " ", "same", " ", "approach", " ", "to", " ", 
    RowBox[{"solve", ":", "\[IndentingNewLine]", 
     RowBox[{"0", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"d", " ", 
        RowBox[{
         RowBox[{"c", "''"}], "[", "x", "]"}]}], " ", "-", " ", 
       RowBox[{"k", " ", 
        SuperscriptBox[
         RowBox[{"c", "[", "x", "]"}], "4"]}]}]}]}]}], ",", " ", 
   RowBox[{
    RowBox[{"with", " ", "boundary", " ", "conditions", " ", 
     RowBox[{"c", "[", "0", "]"}]}], "\[Equal]", "c0"}], ",", " ", 
   RowBox[{
    RowBox[{"c", "[", "\[Infinity]", "]"}], " ", "\[Equal]", "0"}], ",", " ", 
   
   RowBox[{"for", " ", 
    RowBox[{"c", "[", "x", "]"}]}]}], TraditionalForm]], "Text",
 CellChangeTimes->{{3.777074781328854*^9, 3.77707482265298*^9}, {
  3.7770751716666*^9, 3.777075171829803*^9}, {3.777204201853539*^9, 
  3.777204231783787*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"bea40fae-5f3d-4f54-a754-36c023f2cddd"]
}, Closed]],

Cell[CellGroupData[{

Cell["5.  Numerical Solutions to PDEs and ODEs", "Section",
 CellChangeTimes->{{3.777046438420651*^9, 3.777046446246058*^9}, {
   3.777046829075227*^9, 3.777046833134653*^9}, 
   3.77704687232559*^9},ExpressionUUID->"c2fa78ba-86ae-4523-a4ad-\
8aa5872e354c"],

Cell["\<\
Lot\[CloseCurlyQuote]s of PDEs defy easy analytical solution, but can be \
plotted numerically.  Consider the first one we solved above\
\>", "Text",
 CellChangeTimes->{{3.77704645010292*^9, 3.7770464741255417`*^9}, {
  3.77704768943778*^9, 
  3.777047690169305*^9}},ExpressionUUID->"89359862-1697-4237-baf7-\
3cc227a07ab7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "=", "0.5"}], "}"}], ",", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["c", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"d", " ", 
         RowBox[{
          SuperscriptBox["c", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "t"}], "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["c", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "  ", "0"}], ",", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"1", ",", "t"}], "]"}], " ", "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", " ", "1"}]}], "}"}], ",",
      " ", 
     RowBox[{"c", "[", 
      RowBox[{"x", ",", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "=", "0.5"}], "}"}], ",", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["c", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"d", " ", 
         RowBox[{
          SuperscriptBox["c", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "t"}], "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["c", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "  ", "0"}], ",", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"1", ",", "t"}], "]"}], " ", "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", " ", "1"}]}], "}"}], ",",
      " ", 
     RowBox[{"c", "[", 
      RowBox[{"x", ",", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7770464841481037`*^9, 3.777046518856188*^9}, {
  3.777312549883278*^9, 3.777312550939486*^9}, {3.7773125826296434`*^9, 
  3.7773125832400446`*^9}},ExpressionUUID->"f974f574-9695-490a-b43a-\
d1f74e47a3dc"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ibcinc",
   "\"Warning: boundary and initial conditions are inconsistent.\"",2,144,28,
   26304610665235351396,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777312168027197*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"02ac1205-69e1-4f5b-bcbe-f856c4bdea9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"x", ",", "t"}], "]"}], "\[Rule]", 
    RowBox[{
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 1.}, {0., 10.}}, {
       5, 5, 1, {25, 78}, {6, 4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{0.,
         0.041666666666666664`, 0.08333333333333333, 0.125, 
        0.16666666666666666`, 0.20833333333333334`, 0.25, 0.2916666666666667, 
        0.3333333333333333, 0.375, 0.4166666666666667, 0.4583333333333333, 
        0.5, 0.5416666666666666, 0.5833333333333334, 0.625, 
        0.6666666666666666, 0.7083333333333334, 0.75, 0.7916666666666666, 
        0.8333333333333334, 0.875, 0.9166666666666666, 0.9583333333333334, 
        1.}, CompressedData["
1:eJwBfQKC/SFib1JlAQAAAE4AAAAAAAAAAAAAAMSu4C2ds7o+xK7gLZ2zyj4T
g2jitQbUPsSu4C2ds9o+Om2sPEKw4D7smCSIKV3nPpzEnNMQCu4+J3iKD3xb
8j5OqXFEAN4JP0QLj0AhRxU/4UHlXkKfHT8A2ZBjI0Q8P8QwtBc7kEg/hPrP
PjJ/UT9N5bGKCdBbPwvoSWtwEGM/cN06Edw4aD/p8aAyXsduPzKDAyrwqnI/
bo22OjHydT+naY31CYN6P+BFZLDiE38/DJGdtV3SgT+6+9/CyguFP2hmItA3
RYg/FtFk3aR+iz90JeE9pEWWP13iDw32y54/o08f7iOpoz++GDKVs3KqP+xw
Ip4hnrA/edWrcekCtD8GOjVFsWe3PwE2Owi487w//pigZd8/wT/7liPH4gXE
P8ZVVNPu2ck/khSF3/qtzz+u6dp1A8HSPxRJ83sJq9U/oRXIrH8N2T8u4pzd
9W/cP7qucQ5s0t8/oz2jH3Ga4T8kevShMtXkP6S2RST0D+g/JPOWprVK6z+k
L+god4XuP0wBSFyYd/E/x+obJHWs8z9B1O/rUeH1P7u9w7MuFvg/NqeXewtL
+j/WnZ9yx039PzvK07RBKABAi8VXsJ+pAUDbwNur/SoDQCu8X6dbrARAyx+N
3dyhBkBsg7oTXpcIQA3n50nfjApArkoVgGCCDEBOrkK24XcOQBbSHb7NwBBA
BU0aoapFEkDzxxaEh8oTQOJCE2dkTxVA0b0PSkHUFkDLwLUHJasYQMXDW8UI
ghpAv8YBg+xYHEC5yadA0C8eQFnmJv9ZAyBA1uf53cvuIEAaSdaOF2QiQI0k
a8cLMiNAAAAAAAAAJEDj/SHd
        "]}, {
       Developer`PackedArrayForm, CompressedData["
1:eJwl2QMTGEsWgNGXZF9s27Zt27Zt27Zt27Zt27aNPbvpqvMDeqa+mts98eq3
Kd86wD///DMnyD//X4EITDBCEobwRCIqMYhNPBKShOSkIi0ZyEw2cpKH/BSi
KCUoTTkqUoXq1KIuDWhMM1rShvZ0ois96E0/BjKE4YxiLBOYzDRm/m9fzGcR
S1nBataxkS1sZxd7OcBhjnGSM5znEle5wW3u8ZAnPOcVb/nAZ77xkz8E9ID/
JSghCE04IhKF6MQiLglITDJSkob0ZCIrOchNPgpShOKUoiwVqEw1alKH+jSi
KS343wtvR0e60J1e9GUAgxnGSMYwnklMZQazmcdClrCcVaxlA5vZxk72sJ9D
HOUEpznHRa5wnVvc5QGPecZL3vCeT3zlB78JEPCff/5DEIITirBEIDLRiEkc
4pOIpKQgNenISBayk4u8FKAwxShJGcpTiarUoDb1aEgTmtOKtnSgM93oSR/6
M4ihjGA045jIFKYzi7ksYDHLWMka1rOJrexgN/s4yBGOc4qzXOAy17jJHe7z
iKe84DXv+MgXvvMr4N/4AxGYYIQkDOGJRFRiEJt4JCQJyUlFWjKQmWzkJA/5
KURRSlCaclSkCtWpRV0a0JhmtKQN7elEV3rQm34MZAjDGcVYJjCZacxkDvNZ
xFJWsJp1bGQL29nFXg5wmGOc5AznucRVbnCbezzkCc95xVs+8Jlv/OQPAf+j
f4ISgtCEIyJRiE4s4pKAxCQjJWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8j
mtKC1rSjI13oTi/6MoDBDGMkYxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGO
coLTnOMiV7jOLe7ygMc84yVveM8nvvKD3wT4V/8EITihCEsEIhONmMQhPolI
SgpSk46MZCE7uchLAQpTjJKUoTyVqEoNalOPhjShOa1oSwc6042e9KE/gxjK
CEYzjolMYTqzmMsCFrOMlaxhPZvYyg52s4+DHOE4pzjLBS5zjZvc4T6PeMoL
XvOOj3zhO7/+/fvhD0RgghGSMIQnElGJQWzikZAkJCcVaclAZrKRkzzkpxBF
KUFpylGRKlSnFnVpQGOa0ZI2tKcTXelBb/oxkCEMZxRjmcBkpjGTOcxnEUtZ
wWrWsZEtbGcXeznAYY5xkjOc5xJXucFt7vGQJzznFW/5wGe+8ZM/BDRb/UtQ
QhCacEQkCtGJRVwSkJhkpCQN6clEVnKQm3wUpAjFKUVZKlCZatSkDvVpRFNa
0Jp2dKQL3elFXwYwmGGMZAzjmcRUZjCbeSxkCctZxVo2sJlt7GQP+znEUU5w
mnNc5ArXucVdHvCYZ7zkDe/5xFd+8JsAQfVPEIITirBEIDLRiEkc4pOIpKQg
NenISBayk4u8FKAwxShJGcpTiarUoDb1aEgTmtOKtnSgM93oSR/6M4ihjGA0
45jIFKYzi7ksYDHLWMka1rOJrexgN/s4yBGOc4qzXOAy17jJHe7ziKe84DXv
+MgXvvMr6N+hPxCBCUZIwhCeSEQlBrGJR0KSkJxUpCUDmclGTvKQn0IUpQSl
KUdFqlCdWtSlAY1pRkva0J5OdKUHvenHQIYwnFGMZQKTmcZM5jCfRSxlBatZ
x0a2sJ1d7OUAhznGSc5wnktc5Qa3ucdDnvCcV7zlA5/5xk/+EDC4/glKCEIT
johEITqxiEsCEpOMlKQhPZnISg5yk4+CFKE4pShLBSpTjZrUoT6NaEoLWtOO
jnShO73oywAGM4yRjGE8k5jKDGYzj4UsYTmrWMsGNrONnexhP4c4yglOc46L
XOE6t7jLAx7zjJe84T2f+MoPfhMghP4JQnBCEZYIRCYaMYlDfBKRlBSkJh0Z
yUJ2cpGXAhSmGCUpQ3kqUZUa1KYeDWlCc1rRlg50phs96UN/BjGUEYxmHBOZ
wnRmMZcFLGYZK1nDejaxlR3sZh8HOcJxTnGWC1zmGje5w30e8ZQXvOYdH/nC
d36F+HvgD0RgghGSMIQnElGJQWzikZAkJCcVaclAZrKRkzzkpxBFKUFpylGR
KlSnFnVpQGOa0ZI2tKcTXelBb/oxkCEMZxRjmcBkpjGTOcxnEUtZwWrWsZEt
bGcXeznAYY5xkjOc5xJXucFt7vGQJzznFW/5wGe+8ZM/BAylf4ISgtCEIyJR
iE4s4pKAxCQjJWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13o
Ti/6MoDBDGMkYxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jO
Le7ygMc84yVveM8nvvKD3wQIrX+CEJxQhCUCkYlGTOIQn0QkJQWpSUdGspCd
XOSlAIUpRknKUJ5KVKUGtalHQ5rQnFa0pQOd6UZP+tCfQQxlBKMZx0SmMJ1Z
zGUBi1nGStawnk1sZQe72cdBjnCcU5zlApe5xk3ucJ9HPOUFr3nHR77wnV+h
/172BSIwwQhJGMITiajEIDbxSEgSkpOKtGQgM9nISR7yU4iilKA05ahIFapT
i7o0oDHNaEkb2tOJrvSgN/0YyBCGM4qxTGAy05jJHOaziKWsYDXr2MgWtrOL
vRzgMMc4yRnOc4mr3OA293jIE57zird84DPf+MkfAobVP0EJQWjCEZEoRCcW
cUlAYpKRkjSkJxNZyUFu8lGQIhSnFGWpQGWqUZM61KcRTWlBa9rRkS50pxd9
GcBghjGSMYxnElOZwWzmsZAlLGcVa9nAZraxkz3s5xBHOcFpznGRK1znFnd5
wGOe8ZI3vOcTX/nBbwKE0z9BCE4owhKByEQjJnGITyKSkoLUpCMjWchOLvJS
gMIUoyRlKE8lqlKD2tSjIU1oTiva0oHOdKMnfejPIIYygtGMYyJTmM4s5rKA
xSxjJWtYzya2soPd7OMgRzjOKc5ygctc4yZ3uM8jnvKC17zjI1/4zq9wfy/6
AxGYYIQkDOGJRFRiEJt4JCQJyUlFWjKQmWzkJA/5KURRSlCaclSkCtWpRV0a
0JhmtKQN7elEV3rQm34MZAjDGcVYJjCZacxkDvNZxFJWsJp1bGQL29nFXg5w
mGOc5AznucRVbnCbezzkCc95xVs+8Jlv/OQPASPon6CEIDThiEgUohOLuCQg
MclISRrSk4ms5CA3+ShIEYpTirJUoDLVqEkd6tOIprSgNe3oSBe604u+DGAw
wxjJGMYzianMYDbzWMgSlrOKtWxgM9vYyR72c4ijnOA057jIFa5zi7s84DHP
eMkb3vOJr/zgNwEi6p8gBCcUYYlAZKIRkzjEJxFJSUFq0pGRLGQnF3kpQGGK
UZIylKcSValBberRkCY0pxVt6UBnutGTPvRnEEMZwWjGMZEpTGcWc1nAYpax
kjWsZxNb2cFu9nGQIxznFGe5wGWucZM73OcRT3nBa97xkS9851fEvz/5AhGY
YIQkDOGJRFRiEJt4JCQJyUlFWjKQmWzkJA/5KURRSlCaclSkCtWpRV0a0Jhm
tKQN7elEV3rQm34MZAjDGcVYJjCZacxkDvNZxFJWsJp1bGQL29nFXg5wmGOc
5AznucRVbnCbezzkCc95xVs+8Jlv/OQPASPrn6CEIDThiEgUohOLuCQgMclI
SRrSk4ms5CA3+ShIEYpTirJUoDLVqEkd6tOIprSgNe3oSBe604u+DGAwwxjJ
GMYzianMYDbzWMgSlrOKtWxgM9vYyR72c4ijnOA057jIFa7zX2okHJY=
        
        "], CompressedData["
1:eJzsvXc81e//+I9KUgmVVGSWiIyMCoesUBQphSJEicwkI5tssqJhV4Rkz/NA
9t57ZSabCBm/1/v1/n7PdYz37Tdun9/vO34v/7i5367b9bzO8Tznfh7jug6D
pqHiA0ICAoIOKoL/9jMt8u/fouIj2sts9/VF8/5X5cP/Rfy/ep3rf/9M4bgC
bxFdxlmZvLVN/Md/G7+Z//d5Vjdxxf82z59NXCslvMOU52be0nbjE69tmb+W
3LYrm8ZCeGITz9e5lDYiHZhHsbaRB+9qft+Y3JZ3ZHwj75WuJ5/i24GdZ9v4
PEzfLGyrq+XBrK/t3MAZJMX1g8vMMfXN+hvmWUgQ0mWncMTqedUu4fOYL/lj
s0+x2Iu61Z34PLawlaa8egB7KvFY7Roef8UTKXC4mRzq9v3iWMbjdjuLKXMk
ueF7AIPOGB737xp0v7QiA4WEvN+L8fjzhzGaVdLq4Mc1EkeKx8UGD8w8cn0G
Zlc4PyqtIt6skzIZqO0GL2+/OsixjHh2IN37erUgIBxsDOGfQPyIQy+vxNlY
ICUOek7SjPgkyQnqCeU0aDgoFPfqC+Kqu/wezuZiQUU+kFTFGu9xtTwbOrn2
Db6cdibV5sIbv3zC4SpBOeS8sFxab5zE8YeaDOLBwdUwdSFYrv0h4sNl+tev
tdTBAGHC9y/TEziuTs0UKhHeAKyPHq1zTIzj+IVY75VwrWa49KB38nfFGI4b
KE9f9tdoBdI9WSe0/X/ieOunN5lhqW0QJro/97L8KI57HB+8csqmHaIWOOm/
uI7g+KCy0ZBndzsofqwnrMsfwvGEHHmCL2HtQNZ0LcGPaBDH2438RH9OtIGK
qVmgzI1+9DpKCp6fGG8F8K9fCc/ow/GLy8ouGikt4HF21lH6VjeOM++YI6do
boL9D5q4nULb0etXer32alcDHD3+tmBRuAX9f78GcFgM1QFDV3SYLqYRx+0Z
Jx5b7aiBLjpZ2cPBdei+WtDcV2VeAfapozPyFytxvExmjGJevAS6c1SKKoRL
cJye1XuHkn8heJcN1jpQF+J44hn6wC8lWFhPOCzlrZyH46c12DM/KmeBWq+a
1Z6MDPS6Xj/05FthKly4FfC69VcSjueeO62xeDERomryIvRpPuF40BmmH8WN
MbDYx++1sD8Cx3e5l9byyoSBXO+y69qO1+h1dPL0ELFkENjk8ju0t/qi/2+U
Sw2Psw/c5fvdpdvsjOM5HqodNyKcoJ/0+M/hy9Y4Hn2x7RBjnyUcN2krOahi
guMd5hHVoU+NwWRH1YWDtbo4Ln3A6E/7Zx3g5fpy4lvOPRxX8vsSMqt9Fwxu
U+zjzLmB47oeP4tO7roBbr6aERYZ4jj+tlep6B6vONyJEup8WnMRx0PabTKU
aS+CFx/He5e9PDiud0DwYehrbvj33+j97d+/ubZ44R/+/wY/v8Wz/338/z1+
fosf//1bYot///1bJm95W34nb247nmSWd3LT+v8eppwqnL1zK6czmxcuotjK
DcN2YVwKVzfPn08jcxub6qiygYvuLr7couSDveGavIjPza7fzKFjLsTaisw2
4XMK3tby2ZAR7ECCegi+T0lcfnUXYQ8ChjZBfAmPX2mSL7RuOwdDcfd8f+Dx
81+iSYyF5GDcMvQXFo+TJpPSJIvdB8dXnZ/n1xA355SRoBR4DiFXxyVY8Hxq
4/FJ9XmWO1xTPc3avYT42WpnddlLwWCwLNfmMI74W8PXOjtqY2Ge4xhVWyPi
GY2V/R+T00ChbjyqKwFx1sWSLCZqgO5FC1d6S8RDhKmKwliLoLaSfimUA3GW
6AuL90+XwzGXnxWpdcibFv4F2fE51bB6IsX42APE+cSULaWH68DZgdzTYxz5
VLlYK+Z8YgN8tksr1f+BfDpFf1xnwaAZGCd7couLkU9TpD3FCnRb4blQxtNh
L+RTLxrHfI6sNjgy8+r1O2nkU7pJ8Tof23ZgSX07NGWPfNre5Xom8S+f3uTo
iTuRg3x6rmyFmPr9X+NrqG12rw6g/yNRZAjDWBuYTBz4sCiHfLrnlV+G5Ggr
dByftQtMRj6NPlvVxPWlBVIL74YSyyGfyugN8JrXNcFPK/sIxlfIp9dlfim/
a22AwPinceb8yKf6tqV7hvrqwDNlzD5XAPm0SGr1dcVyNfzZQ3CY1w/5VNvz
vH3GkwpoZ+Y+o8eFfJrydWZvmVAJnJjNLnDjQz59paWjc9irEG4fwjyIp0A+
5Xz6bXQ5BwuP5Bu9rlxFPv22XCUeJJ8FtJXk07UJyKfp2prXTuekQtrFW5fo
J5FPrYudKbw5E2GW174uixL5lJl0p/ONyhgQG87j3rEb+bSIZsS0QygMiF9G
6B1dDsbxbsbpciqhIPDOt2hpq0M+nZNIOX/fwgdyFgOHMFXIp7rEUdPNr51A
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
v0a0Ia87XPLO/65+P1by1FFGfE77kOym5RtyaLYI+PUHj9OLDF6nNuWCCuaf
s/j9RXEnJ3z38yvC0g14kYDH4/vr6wIO64G2RZIdAx6fD9jRs9PVGgzpO9gO
4fn0FkXVcHK1G7DQf9VPwYtDWUhCTo09DQEJyqutHXhxaPuDSNnD+tHQoGB/
hw+v7yiz8Qjhp+V4kJFvqxDAq5OyO3jM84hngqUm/RLVB8RlC4IWNckL4POf
yolmA8RfUL9/2JNVDG/CG0cVT+PF9cMKPtd2V0D+YKi4Qxny40BxtPKEew1g
g8rsOFUQV/vuKjJ/uR72ln6tY+xF3mS/8VMyaXcjJEZpn6S4g7jHMbpJarcm
KFNa+XNKFPlUNGvijlllC5xzPP8tjAz5dMxeaqb5dhtICfNF/ahCeV39HcGX
BK+3A9dOaZZJe+TT2UMa3Ceq28F7vy5tWSby6VsPvZPzXe0Q7OLyh/UX6uNt
eanwKVmzHVi52eJiBJFPeRnUfvS4tMEB1VSxVwHIp5XSwqxOuq2w+6PF2zIi
5NPiUQyX4fEWgGuYjq+kyKctl5to5842gW40z2n7J8inuVeGfT6fa4CJO0FU
t7mRT2MGd/CfuFQHH0ittcavIZ9e2DVMlVxZBYqFezFFbrU4/omt4Q//zXIY
OWRHD23lOP5xX7T+bvFi2O9GHDNGhXyaxVn+YDClACacOqfkmJFPz+QIfmy5
nAfRb97vsyjOwXFbZh8Op4OZUJbb9zjNAPk0KLrIYTU5BVqiPrIy7kI+ZShd
sZCIiocy3ncJtws/oPvhXAIfz4doMKPnWPxzGPm0fc3dS9b3HRDZT6nsigrC
cTExM7FDxIGQMP5alS3XB30eMEuh7sjxgpOlOz2yvZFPC4xUA3VMHGEoxDuU
/70ljncQhoUGKjyHHiFbPy5J5FMziKNRNjaCpuX5ZXNd5NN8612h727/5VMh
GnvsqBqOH/1e9/12vCrs0/QR/+mFfNqj3mKGHVIAzcFz5dKuyKd/ymv4hveL
wZUPa471XMin4eSC6Qpe56FcpDWl7hcXen+Yyjdscv/Hp/+L8S19wn/Hn3aX
hEm2Gy/kJ8y1HR9KEb61ttWDfUV9eQrft3qWS+kItiZ3Kz+vSIg9+I6IYJNn
wwgdH2MYd5/YzEV2v3qP8SN23ryec2xymZiTqnJl+PNrBxxWDLgzh316Rugc
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
Gufk2Wy3b8U0Kq96m7jyJdNRjCvL1vmvK/JgnHq3zkPALovNLlvact1zJpbY
dttfG/i/drFcm2TGCJ07tnn+xZIfnzFtJ9w2c9616wUYyb6qzetkp6zzx6q/
S/u98brXj9wWXMTKjWvmblxnb45o3gkQ9vo5vrYhHq9lGLY+DwFqsznDeFz3
2l35NklNKOIzNbbF97i9SOSrAjtgn3xJ4ooXh57Lbjip3/gKxH6SkyvixaGR
pAZf5rRjwCNimkUDL3/bnGLGbrgjGUxNiTOl8PazfJHi/VL7IgssdA5/39eH
+BTd50OTwvlw+iDRK/YSxCtuFtA9ViuGiwtauWkxiN9S/yjJXF4OF1xiftva
4sXRbzVNT4RXw3ycINstOsRNQ9ShmLABqjg+BCckIm9+Kamn0rrRBCctXz9R
5UFc451W58r+FlAz7eW7h3fegkJb1Kt+rVYIdnxwRo8UccerRGfqQtpA1Yuy
0VEDefP+uKZWv207PL65NKb5FXkz2sZ6lxh7B+T9/vRIaw15k+u5R7xebAco
mhewNEWgONRK22vZl60T7pot13tfQj71jbn38S6mE1w8bXM9+pE3n6mm0Jeu
dcCbe4JUni9RXveevbmW6IsOSGcaJCLPQ3Go0kKs5ZRdO7TndFRP7UI+/XXp
bYnApTYgEfSxVNJBPnWkkeQl62wBoyXNJ7fzUV7XOOhn/ZBaMwxU/xijH0V1
Uqeu/OZnLY0QNUm5I18d9R0lEfUXvP9WDyyXdb1enUc+Pe5hOZvtWQtipUNJ
zk9QnTRyTvZCS10laHzRIqyeR3VSSW2f4PfqZXCV5OLD8HjUx7vikzTRgSkG
f9KRl+/GUd8RhjEktOFDAbz4qsfsv4r6jlKqMu54n8wD6uaZ9Hw71Mer6xE+
WjGZAWJhLDxr3GhfjJSP9bcx7xTY28lSEtX9FX3+Odt95kfzF9h7wMpvSTcW
x38wZ1wVXf4Aj46mEsQvoXN6+yTdvDgswuGIiLCEsWIIet2xXKsgNA+GoiOM
VNPf/HA8gT2NT+idLxCxPtJQaHuJHpeKHeEHPVdw48i1/bkf+dSn+cp9ipcv
IJBSVdQv3wy9b9TOCN9rMIW3rx1TuEb10Oe6JJpoqrRHwBNMU8Jteh/Hjwi2
l0d+1gBtSUq9jy9u4TgLE63K3ZCbMJG4+lyt7iqONzC9jazruwKml8Q5CJOE
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
        "]}, {
       Automatic, Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", 
     RowBox[{"x", ",", "t"}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7773121686764956`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"dc96130b-d9f2-44f6-98ee-672333cc9483"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sol", " ", "=", " ", 
     RowBox[{"Quiet", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["c", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"d", " ", 
             RowBox[{
              SuperscriptBox["c", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"2", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"x", ",", "t"}], "]"}]}]}], ",", " ", 
           RowBox[{
            RowBox[{
             SuperscriptBox["c", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "  ", "0"}], ",", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"1", ",", "t"}], "]"}], " ", "\[Equal]", "0"}], ",", " ", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", " ", "1"}]}], "}"}], 
         ",", "\[IndentingNewLine]", " ", 
         RowBox[{"c", "[", 
          RowBox[{"x", ",", "t"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}], "]"}],
       "]"}]}], "}"}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7773126743995132`*^9, 3.7773127724306755`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"cdba5e67-2a63-4f66-8a0a-0047d65bdd62"],

Cell["Why the error message when you run this?", "Text",
 CellChangeTimes->{{3.777204260074272*^9, 3.7772042779051943`*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"93f840e2-1e2b-458c-a30f-1f393ee12927"],

Cell["\<\
We can also do numerical solutions to ODEs that we got from steady state \
reaction diffusion equations, but weren\[CloseCurlyQuote]t able to solve \
analytically.  \
\>", "Text",
 CellChangeTimes->{{3.7770481326741047`*^9, 
  3.777048162897902*^9}},ExpressionUUID->"71013fa8-943f-4989-9071-\
780cf3b8f2bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"d", " ", 
        RowBox[{
         RowBox[{"c", "''"}], "[", "x", "]"}]}], " ", "-", " ", 
       RowBox[{"k", " ", 
        FractionBox[
         RowBox[{"c", "[", "x", "]"}], 
         RowBox[{"1", "+", 
          RowBox[{"c", "[", "x", "]"}]}]]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"c", "[", "0", "]"}], "\[Equal]", "c0"}], ",", " ", 
     RowBox[{
      RowBox[{"c", "[", "1", "]"}], " ", "\[Equal]", "0"}]}], "}"}], ",", " ", 
   RowBox[{"c", "[", "x", "]"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7770489030699263`*^9, 3.777048907550905*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"585c4ecd-76fa-47fc-9d32-7c75e7e15a13"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","deqx",
   "\"Supplied equations are not differential or integral equations of the \
given functions.\"",2,145,29,26304610665235351396,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7770489088558397`*^9, 3.7773123002433577`*^9},
 CellLabel->
  "During evaluation of \
In[145]:=",ExpressionUUID->"33608316-6902-45f1-9acc-5ab51d9c56db"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"k", " ", 
          RowBox[{"c", "[", "x", "]"}]}], 
         RowBox[{"1", "+", 
          RowBox[{"c", "[", "x", "]"}]}]]}], "+", 
       RowBox[{"d", " ", 
        RowBox[{
         SuperscriptBox["c", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}]}]}]}], ",", 
     RowBox[{"1", "\[Equal]", "c0"}], ",", 
     RowBox[{
      RowBox[{"c", "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"c", "[", "x", "]"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.7770489088615923`*^9, 3.777312300258318*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"c6cf74bc-84c1-4f40-92dc-6dc8647b7957"]
}, Open  ]],

Cell["How would we do this numerically?", "Text",
 CellChangeTimes->{{3.7772043515687647`*^9, 3.777204356299943*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"5d26e663-570a-44b6-a77d-80318eefd5ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "=", "0.5"}], ",", " ", 
      RowBox[{"k", " ", "=", " ", "0.1"}], ",", " ", 
      RowBox[{"c0", " ", "=", " ", "1"}]}], "}"}], ",", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"d", " ", 
           RowBox[{
            RowBox[{"c", "''"}], "[", "x", "]"}]}], " ", "-", " ", 
          RowBox[{"k", " ", 
           FractionBox[
            RowBox[{"c", "[", "x", "]"}], 
            RowBox[{"1", "+", 
             RowBox[{"c", "[", "x", "]"}]}]]}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"c", "[", "0", "]"}], "\[Equal]", "c0"}], ",", " ", 
        RowBox[{
         RowBox[{"c", "[", "1", "]"}], " ", "\[Equal]", "0"}]}], "}"}], ",", 
      " ", 
      RowBox[{"c", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7773123344567966`*^9, 3.777312396850856*^9}, {
   3.7773125046543627`*^9, 3.7773125271331615`*^9}, 3.7773125595045595`*^9},
 CellLabel->
  "In[147]:=",ExpressionUUID->"7f6f7cdf-730e-4903-ae7b-2939c4ebdf68"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","deqn",
   "\"Equation or list of equations expected instead of \
\\!\\(\\*RowBox[{\\\"True\\\"}]\\) in the first argument \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"0\\\", \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"0.1`\\\", \\\" \\\", \
RowBox[{\\\"c\\\", \\\"[\\\", \\\"x\\\", \\\"]\\\"}]}], RowBox[{\\\"1\\\", \\\
\"+\\\", RowBox[{\\\"c\\\", \\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]]}], \
\\\"+\\\", RowBox[{\\\"0.5`\\\", \\\" \\\", RowBox[{SuperscriptBox[\\\"c\\\", \
\\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"x\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \\\"True\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"c\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}]}], \\\"}\\\"}]\\).\"",2,147,31,
   26304610665235351396,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7773123872874565`*^9, 3.7773124028358045`*^9}},
 CellLabel->
  "During evaluation of \
In[147]:=",ExpressionUUID->"70bf8d9c-e408-4570-9cd0-4995eb1a6534"],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"0.1`", " ", 
          RowBox[{"c", "[", "x", "]"}]}], 
         RowBox[{"1", "+", 
          RowBox[{"c", "[", "x", "]"}]}]]}], "+", 
       RowBox[{"0.5`", " ", 
        RowBox[{
         SuperscriptBox["c", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}]}]}]}], ",", "True", ",", 
     RowBox[{
      RowBox[{"c", "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"c", "[", 
    RowBox[{"x", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.777312387315338*^9, 3.7773124028577433`*^9}},
 CellLabel->
  "Out[147]=",ExpressionUUID->"15246167-8050-4ad7-a6aa-4701158417b1"]
}, Open  ]],

Cell["\<\
We notice that numerically solving the second order ODE creates some \
difficulties for some parameter values.  Especially if xmax gets too big.  

There\[CloseCurlyQuote]s an alternative way to get a steady state solution \
which is often numerically easier:  Find the numerical solution for the \
original PDE and then increase time until the result stops changing.  

Let\[CloseCurlyQuote]s compare.  In this case, the PDE that the above was the \
steady stead of was:\
\>", "Text",
 CellChangeTimes->{{3.77707521859692*^9, 3.777075243438282*^9}, {
  3.77707528080133*^9, 3.7770753453771133`*^9}, {3.777075379295989*^9, 
  3.77707538612857*^9}, {3.7770754504848223`*^9, 
  3.7770754572231703`*^9}},ExpressionUUID->"51e964a8-bb68-4b1d-ae3c-\
3b0064a270fe"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FormBox[
    FractionBox[
     RowBox[{"\[PartialD]", "c"}], 
     RowBox[{"\[PartialD]", "t"}]],
    TraditionalForm], " ", "=", " ", 
   RowBox[{
    FormBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], "c"}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["x", "2"]}]],
     TraditionalForm], "  ", "-", " ", 
    RowBox[{"k", " ", 
     FractionBox["c", 
      RowBox[{"1", "+", "c"}]]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.7770753896682034`*^9, 3.777075393345271*^9}, {
  3.7770754462209883`*^9, 
  3.7770754463751097`*^9}},ExpressionUUID->"b7140529-acd2-43c0-baa8-\
f4f3e4d5086e"],

Cell["\<\
Manipulate is a very useful function, that is not limited to just two-D \
plots.  Moreover, almost anything can be put on a controller, and controllers \
can have various forms\
\>", "Text",
 CellChangeTimes->{{3.7772044660334873`*^9, 
  3.7772045113923597`*^9}},ExpressionUUID->"a88f37c0-c45b-4447-836d-\
0a49ba075df1"]
}, Closed]],

Cell[CellGroupData[{

Cell["More complicated forms", "Section",
 CellChangeTimes->{{3.7770760582222424`*^9, 
  3.777076062610759*^9}},ExpressionUUID->"60296e6d-a283-4ae8-bae2-\
08137ff5b134"],

Cell[CellGroupData[{

Cell["NDSolve can handle equations with piecewise functions.  ", \
"Subsubsection",
 CellChangeTimes->{{3.777076065469137*^9, 3.777076100344452*^9}, 
   3.7770765436459837`*^9},ExpressionUUID->"a00815cd-54b2-44ce-b4ee-\
ba320c80c61b"],

Cell["\<\
For example, suppose we had a molecule produced from x=0 to x=1, but be able \
to diffuse anywhere in a larger domain. Instead of our production term being \
a constant, \[OpenCurlyDoubleQuote]v\[CloseCurlyDoubleQuote], it can be an \
\[OpenCurlyDoubleQuote]if\[CloseCurlyDoubleQuote] statement: 

If[x>1, v, 0]\
\>", "Text",
 CellChangeTimes->{{3.777076127032537*^9, 3.777076233823859*^9}, {
  3.7770763114186687`*^9, 
  3.77707631218612*^9}},ExpressionUUID->"36dd9cb0-3bfa-4fd9-b04f-\
b1cec3668c6a"],

Cell["\<\
Exercise :  Solve a RD equation on a domain 0<x<10,  for a molecule that\
\[CloseCurlyQuote]s produced only between x=0 and x=1, and is destroyed \
everywhere with a rate constant \[OpenCurlyDoubleQuote]k\
\[CloseCurlyDoubleQuote] that is also not uniform, but is in fact twice as \
high for x>4 than it is for 0<x<4.

Have the boundary conditions be (1) that the derivative of c with respect to \
x is zero at x=0, and (2) that c is zero at x=10.  

Pick some parameters, or pick parameter ranges and put them on sliders
\
\>", "Text",
 CellChangeTimes->{{3.77707631485837*^9, 3.7770765019854603`*^9}, 
   3.7773141670504456`*^9},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"374a5b0f-c918-4271-993a-d78be3228a74"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.7773141689583707`*^9},ExpressionUUID->"00d58c47-76aa-4732-9487-\
fe59fef045b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["NDSolve can handle systems of equations.  ", "Subsubsection",
 CellChangeTimes->{{3.777076065469137*^9, 3.777076100344452*^9}, {
  3.7770765436459837`*^9, 
  3.777076560221833*^9}},ExpressionUUID->"fc552c85-f751-46c1-952d-\
67ca6d86ff4d"],

Cell[TextData[{
 "As long as only one of the equations is a PDE, Mathematica can handle \
almost any number of ODEs coupled to it.  Consider the following system:  \
Species c diffuses, but it binds reversibly to immobile species r to form the \
immobile complex cr.  There is no degradation of c, just cr and r, which \
occurs with constant probability per unit time.  Species r is produced at a \
constant rate.  \n\nTo describe this system, we need three equations--one for \
c, r, and cr.  Only the one for c is truly a PDE because only it has \
diffusion in it, but in order to write down the whole system in a consistent \
way we must still make every variable of function of both x and t, so every \
equation is still written as a PDE.  \n\nEach equation has  a time rate of \
change on the left hand side, and reaction (plus diffusion in the case of ",
 StyleBox["c",
  FontSlant->"Italic"],
 ") on the right hand side.  \n\nFor ",
 StyleBox["r",
  FontSlant->"Italic"],
 " the reaction terms would be production (a constant), destruction (a \
constant multiplied by r[x,t]) binding to c (a constant times r[x,t] times \
c[x,t]) and unbinding from cr (a constant times cr[x,t]).\n\nFor c the \
reaction terms would be binding between ",
 StyleBox["c",
  FontSlant->"Italic"],
 " and ",
 StyleBox["r",
  FontSlant->"Italic"],
 ", and unbinding from cr (the same terms as used above).  There\
\[CloseCurlyQuote]d also be the usual diffusion term.\n\nFor cr the reaction \
terms would be binding between ",
 StyleBox["c",
  FontSlant->"Italic"],
 " and ",
 StyleBox["r",
  FontSlant->"Italic"],
 ", unbinding from cr, and destruction of cr (a constant times cr[x,t].  Note \
that when a reaction makes a species go away, you use a negative sign; when \
it makes it appear you use a positive sign.  \n\nOnce you have written this \
out as a list of three equations (lists are surrounded by curly brackets and \
elements are separated by commas), you need to add initial and boundary \
conditions.  You need initial conditions for every species (c, r, cr) because \
they all change over time.  You only need boundary conditions for one species \
(c) because only it diffuses.  \n\nWe will use boundary conditions for c at \
x=0 of 1, and at xmax =0, where xmax is a parameter that you can give a value \
to later.  For initial conditions we will use c = 1-x/xmax, i.e. a straight \
line from {0,1} to {xmax, 0}; r=0 and cr=0.  \n\nWhen you use NDSolve now, \
you will ask NDSolve to produce a list of results, {c[x,t], r[x,t], cr[x,t]}, \
so you will have three things you can possibly plot.  If you name your \
solution list something like \[OpenCurlyDoubleQuote]solu\
\[CloseCurlyDoubleQuote], then the syntax \n\nc[x,t]/.solu\n\nretrieves the \
c-interpolation function, which you can plot.  "
}], "Text",
 CellChangeTimes->{{3.77707656912493*^9, 3.777076605953596*^9}, {
  3.777204765215321*^9, 3.7772057010859127`*^9}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"d8fbf834-621d-45c2-bc39-cdcc1c51beec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some useful tips about Plotting and Manipulating", "Section",
 CellChangeTimes->{{3.7772064670476713`*^9, 
  3.7772064741743937`*^9}},ExpressionUUID->"cc79a90d-87a3-45c5-a830-\
171d253ad290"],

Cell[TextData[{
 "The syntax of \[OpenCurlyDoubleQuote]Plot\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]Plot3D\[CloseCurlyDoubleQuote] is \n",
 StyleBox["Plot[function, domain, options]. ",
  FontWeight->"Bold"],
 " or\n",
 StyleBox["Plot[{list of functions}, domain, options]. ",
  FontWeight->"Bold"],
 "in which case various functions are plotted together on the same plot\n\n\
There are many options you can put in there, and using the function browser \
can help you learn what they are.  Examples are\n\nPlotRange-> All (include \
all datapoints; the default setting will often truncate plot range so places \
where not much is happening are cut off)\nPlotRange-> {0, Automatic} (makes \
sure the plot starts from 0, but let\[CloseCurlyQuote]s mathematic choose the \
upper bound)\nPlotStyle-> Red (make the curve red)\nPlotStyle-> {Red, Green, \
Blue} (makes the curves for multiple functions red, green, blue in that \
order)\nPlotLegends-> Automatic (puts legends on your plot so that curves can \
be identified, where the legends are the expressions you are plotting.\n\
PlotLegends-> ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox[
     StyleBox["lbl", "TI"], 
     StyleBox["1", "TR"]], ",", 
    SubscriptBox[
     StyleBox["lbl", "TI"], 
     StyleBox["2", "TR"]], ",", 
    StyleBox["\[Ellipsis]", "TR"]}], "}"}]],
  GridBoxOptions->{
  GridBoxBackground->{
   "Columns" -> {{None}}, "Rows" -> {None, None, None, None, None, {None}}},
  GridBoxDividers->{"Rows" -> {{True, True, True, True, True, True, True}}}},
  ExpressionUUID->"09d58413-4b9b-4ab9-ae18-022abe7b3d16"],
 "(puts legends on your plot that correspond to the text labels you give it ( \
",
 Cell[BoxData[
  FormBox[
   SubscriptBox["lbl", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "902c47e9-144a-4d69-a2d1-cf47ae762b10"],
 ", etc.).  Note that when specifying text you should put \
\[OpenCurlyDoubleQuote] \[OpenCurlyDoubleQuote] marks around it; otherwise if \
you type something that has a value assigned to it, Mathematica will display \
the value and not the text.  "
}], "Text",
 CellChangeTimes->{{3.777205709355523*^9, 3.777206156263605*^9}, 
   3.77720647759063*^9},ExpressionUUID->"c71a2b61-4773-4f5f-b19c-\
a0acdbd29c9f"],

Cell["\<\
If you have multiple functions and are happy plotting them on top of one \
another then putting them all together in one Plot command is fine, but if \
they have different ranges, they may not look pretty that way.  So another \
option is to use \[OpenCurlyDoubleQuote]GraphicsRow\[CloseCurlyDoubleQuote] \
and \[OpenCurlyDoubleQuote]GraphicsGrid\[CloseCurlyDoubleQuote] to format \
multiple plots in a row or grid.  Evaluate these examples to see\
\>", "Text",
 CellChangeTimes->{{3.777206166173366*^9, 3.7772062464317017`*^9}, {
  3.777206300938295*^9, 
  3.7772063052965927`*^9}},ExpressionUUID->"eaa7b1d2-5d7e-4938-a48a-\
04781f9c8e30"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}], ",", " ", 
    
    RowBox[{"Plot", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "x", "]"}], "2"], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "x", "]"}], "3"], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.777206248218989*^9, 3.777206285782682*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"d433ade0-dc36-43f2-991b-069953b890a8"],

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}], ",", 
      " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", "x", "]"}], "2"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", "x", "]"}], "3"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}]}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}], ",", 
      " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "2"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "3"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}]}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Tan", "[", "x", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}], ",", 
      " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Tan", "[", "x", "]"}], "2"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Tan", "[", "x", "]"}], "3"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}]}], 
     "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.777206248218989*^9, 3.777206285782682*^9}, {
  3.777206318038233*^9, 3.777206352892363*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"8e43f4b0-0b3e-4198-9811-e0386536b6fd"],

Cell["You can even use such code inside Manipulate", "Text",
 CellChangeTimes->{{3.777206361033309*^9, 
  3.777206376233499*^9}},ExpressionUUID->"765df1e3-1b5b-4d21-a166-\
2a923c5f4f22"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "0", ",", " ", "xmax"}], "}"}]}], "]"}], 
        ",", " ", 
        RowBox[{"Plot", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", "x", "]"}], "2"], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "0", ",", "xmax"}], "}"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", "x", "]"}], "3"], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "0", ",", "xmax"}], "}"}]}], "]"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Cos", "[", "x", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "0", ",", " ", "xmax"}], "}"}]}], "]"}], 
        ",", " ", 
        RowBox[{"Plot", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "x", "]"}], "2"], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "0", ",", "xmax"}], "}"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "x", "]"}], "3"], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "0", ",", "xmax"}], "}"}]}], "]"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Tan", "[", "x", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "0", ",", " ", "xmax"}], "}"}]}], "]"}], 
        ",", " ", 
        RowBox[{"Plot", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Tan", "[", "x", "]"}], "2"], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "0", ",", " ", "xmax"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Tan", "[", "x", "]"}], "3"], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "0", ",", " ", "xmax"}], "}"}]}], "]"}]}], 
       "}"}]}], "}"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xmax", ",", "4"}], "}"}], ",", " ", "0", ",", " ", "10"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.777206377787477*^9, 3.777206427651197*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"2a6d4fef-295d-4d1b-bbd1-a2ed14ed920d"],

Cell["\<\
Note that things that are repeated many times can be handled more compactly \
by giving them names\
\>", "Text",
 CellChangeTimes->{{3.777206485262074*^9, 
  3.7772065066227627`*^9}},ExpressionUUID->"d178036a-605a-4696-b865-\
2f990196e943"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pr", "=", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "xmax"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GraphicsGrid", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Sin", "[", "x", "]"}], ",", "pr"}], "]"}], ",", " ", 
          RowBox[{"Plot", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Sin", "[", "x", "]"}], "2"], ",", "pr"}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Sin", "[", "x", "]"}], "3"], ",", " ", "pr"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Cos", "[", "x", "]"}], ",", "pr"}], "]"}], ",", " ", 
          RowBox[{"Plot", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "x", "]"}], "2"], ",", "pr"}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "x", "]"}], "3"], ",", "pr"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Tan", "[", "x", "]"}], ",", "pr"}], "]"}], ",", " ", 
          RowBox[{"Plot", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Tan", "[", "x", "]"}], "2"], ",", "pr"}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Tan", "[", "x", "]"}], "3"], ",", "pr"}], "]"}]}], 
         "}"}]}], "}"}], "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xmax", ",", "4"}], "}"}], ",", " ", "0", ",", " ", "10"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.777206509343091*^9, 
  3.777206616424465*^9}},ExpressionUUID->"aa769e65-48e3-46b0-a643-\
9c2ae85c4b03"],

Cell["\<\
We can make things even more compact, by noting that the form Plot[__, pr] \
keeps appearing over and over.  We can in effect define a function on the fly \
that represents Plot[#, pr], where # stand for something to be filled in, and \
then use that as an operator over a list of things to fill in.  The \
\[OpenCurlyDoubleQuote]&\[CloseCurlyDoubleQuote] symbol is used to denote \
that the thing to the left of it is a function with a slot to be filled in.  \
The function Map applies this function to every element in a list.  \
\>", "Text",
 CellChangeTimes->{{3.777206623611093*^9, 3.777206737392811*^9}, {
  3.777206773222921*^9, 3.777206794210272*^9}, {3.777206970087347*^9, 
  3.777206986480693*^9}},ExpressionUUID->"e4a3e059-adb8-4cf8-8677-\
54f25dc36897"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "x", "]"}], "2"], ",", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "x", "]"}], "3"], ",", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "x", "]"}], "4"]}], "}"}]}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.777206705578104*^9, 3.777206712027184*^9}, {
  3.777206744681694*^9, 3.777206751330887*^9}, {3.777206801092595*^9, 
  3.777206962229533*^9}, {3.777207001588159*^9, 3.777207005769515*^9}, {
  3.77720705726842*^9, 3.777207059479998*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"b0f580d6-a74f-45d6-b414-f46335238a00"],

Cell[TextData[{
 "Even the list ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"], ",", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "3"], ",", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "4"]}], "}"}]],
  CellChangeTimes->{{3.777206705578104*^9, 3.777206712027184*^9}, {
   3.777206744681694*^9, 3.777206751330887*^9}, {3.777206801092595*^9, 
   3.777206962229533*^9}, {3.777207001588159*^9, 3.777207005769515*^9}},
  ExpressionUUID->"3d1ccd15-52bf-415e-b8cf-919ed0907ba1"],
 " can be written more compactly as"
}], "Text",
 CellChangeTimes->{{3.777207035321651*^9, 
  3.777207084408017*^9}},ExpressionUUID->"153cf5d6-27f7-4e59-817d-\
913dcb366620"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "n"], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7772070879578733`*^9, 3.777207101155651*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"6cd34fb7-8566-4076-b962-9b3c87aabc88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "3"], ",", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.7772071015786*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"33281638-8dba-436a-98fa-5518a3f3206e"]
}, Open  ]],

Cell["\<\
See how compactly we can write the instructions to make 12 plots:\
\>", "Text",
 CellChangeTimes->{{3.777207352629266*^9, 
  3.777207378514518*^9}},ExpressionUUID->"491af219-4af4-4c03-b848-\
ecd9ead03793"],

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", "x", "]"}], "n"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "n"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Tan", "[", "x", "]"}], "n"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]}], "}"}],
     ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.777206705578104*^9, 3.777206712027184*^9}, {
  3.777206744681694*^9, 3.777206751330887*^9}, {3.777206801092595*^9, 
  3.777206962229533*^9}, {3.777207001588159*^9, 3.777207005769515*^9}, {
  3.77720705726842*^9, 3.777207059479998*^9}, {3.7772071533890142`*^9, 
  3.7772072309133673`*^9}, {3.7772072847149773`*^9, 3.777207325889255*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c3886129-7797-4483-a56c-052e85210d1f"],

Cell["\<\
Did you note the \[OpenCurlyDoubleQuote]{2}\[CloseCurlyDoubleQuote] we \
slipped in at the end of the Map function.  It tells map to apply the \
function at \[OpenCurlyDoubleQuote]level 2\[CloseCurlyDoubleQuote], i.e. \
since we have a list of lists, the actual elements of the list are two levels \
down.  

Finally, we can make this even more compact:\
\>", "Text",
 CellChangeTimes->{{3.7772074043441563`*^9, 
  3.777207459504365*^9}},ExpressionUUID->"070d3f65-c048-4100-b23f-\
10fbb2a0569e"],

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], "&"}], ",", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}], "&"}], ",", " ", 
      
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", "x", "]"}], "n"], ",", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "n"], ",", " ", 
        SuperscriptBox[
         RowBox[{"Tan", "[", "x", "]"}], "n"]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.777206705578104*^9, 3.777206712027184*^9}, {
  3.777206744681694*^9, 3.777206751330887*^9}, {3.777206801092595*^9, 
  3.777206962229533*^9}, {3.777207001588159*^9, 3.777207005769515*^9}, {
  3.77720705726842*^9, 3.777207059479998*^9}, {3.7772071533890142`*^9, 
  3.7772072309133673`*^9}, {3.7772072847149773`*^9, 3.777207325889255*^9}, {
  3.777207471182391*^9, 3.777207542044888*^9}, {3.777207578590742*^9, 
  3.7772076056914186`*^9}},ExpressionUUID->"20b160c2-8db1-4d59-9daf-\
f40d1d787222"],

Cell["\<\
There\[CloseCurlyQuote]s an alternate \[OpenCurlyDoubleQuote]prefix\
\[CloseCurlyDoubleQuote] way to write Map, which involves fewer keystrokes, \
that we can use when we don\[CloseCurlyQuote]t have to explicitly tell \
Mathematica what level to map at.  \
\>", "Text",
 CellChangeTimes->{{3.777207617256378*^9, 3.7772076369082212`*^9}, {
  3.777207698547268*^9, 
  3.777207716952963*^9}},ExpressionUUID->"19d6ee1e-1c4e-4dc2-9e5f-\
bf80e3ba3518"],

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], "&"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}], "&"}], "/@", " ", 
     
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "x", "]"}], "n"], ",", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "n"], ",", " ", 
       SuperscriptBox[
        RowBox[{"Tan", "[", "x", "]"}], "n"]}], "}"}]}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.777207644513212*^9, 3.7772076764424667`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"75f65af1-54f2-4043-b297-e079dc702e85"]
}, Closed]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 253, 4, 67, "Section",ExpressionUUID->"df6f8e02-6691-46cc-8dcf-0ec376269390"],
Cell[CellGroupData[{
Cell[858, 30, 382, 7, 53, "Subsection",ExpressionUUID->"bf7dc5b2-1c24-4c45-b83a-ab969c8d08af"],
Cell[1243, 39, 314, 7, 34, "Text",ExpressionUUID->"6af2cd88-5535-40b5-81d7-7922c9a45001"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1606, 52, 189, 3, 53, "Section",ExpressionUUID->"b6101b6f-499e-4ad6-90c0-a4f6777f7b7d"],
Cell[1798, 57, 2960, 84, 267, "Text",ExpressionUUID->"20cc5304-769f-4150-8698-e052c23d00cf"],
Cell[4761, 143, 679, 21, 56, "Text",ExpressionUUID->"0212a112-c2b8-4f5a-aa9b-561baeaf9f16"],
Cell[5443, 166, 1677, 37, 150, "Text",ExpressionUUID->"af30dffb-65f9-460d-8cb2-00bdc35ca9b0"]
}, Closed]],
Cell[CellGroupData[{
Cell[7157, 208, 181, 3, 53, "Section",ExpressionUUID->"4747e0cc-fc8a-4a12-9d2b-4d887888b9f5"],
Cell[7341, 213, 524, 9, 56, "Text",ExpressionUUID->"af9e9264-4614-4dc3-b67f-1ff0cc4236bd"],
Cell[7868, 224, 332, 7, 50, "Text",ExpressionUUID->"d3825e13-5855-4ed9-bb4e-d620d930f6b9"],
Cell[8203, 233, 1505, 26, 342, "Text",ExpressionUUID->"eb4af53b-de39-4344-9d95-bcd211957656"],
Cell[9711, 261, 482, 9, 34, "Text",ExpressionUUID->"13787ea1-0ca2-45d6-a08f-fa25846e7bfe"],
Cell[10196, 272, 681, 16, 56, "Text",ExpressionUUID->"b70e94d6-c293-4428-adc6-a05fb7fff1bd"],
Cell[CellGroupData[{
Cell[10902, 292, 296, 8, 48, "Input",ExpressionUUID->"b12936d2-59d4-4654-934c-9b3965d34fdb"],
Cell[11201, 302, 239, 6, 32, "Output",ExpressionUUID->"62e3933d-6b3f-4da9-bbbc-87dcf1f3743f"]
}, Open  ]],
Cell[11455, 311, 632, 17, 60, "Text",ExpressionUUID->"18976b8d-d762-4945-bcf2-95a2e7d62340"],
Cell[CellGroupData[{
Cell[12112, 332, 922, 26, 88, "Input",ExpressionUUID->"99bda209-0c5c-449c-9447-d17ec872c78e"],
Cell[13037, 360, 411, 13, 32, "Output",ExpressionUUID->"dca34700-0fc9-4ace-8d4a-d1fb968c896b"],
Cell[13451, 375, 408, 13, 32, "Output",ExpressionUUID->"6a674561-08c8-4e5f-9ddd-89f59f00d634"],
Cell[13862, 390, 411, 13, 32, "Output",ExpressionUUID->"a63cc893-e15f-4a80-b587-bd7872ec36d6"]
}, Open  ]],
Cell[14288, 406, 1836, 49, 129, "Text",ExpressionUUID->"6a5d729c-e13f-43da-aa66-85ead5e3eefc"],
Cell[16127, 457, 156, 3, 34, "Text",ExpressionUUID->"c6a9e095-7c99-4563-bc0b-ed034e898818"],
Cell[CellGroupData[{
Cell[16308, 464, 262, 5, 28, "Input",ExpressionUUID->"d2943250-1251-41a2-a426-a803f0fbecbc"],
Cell[16573, 471, 298, 8, 32, "Output",ExpressionUUID->"0e637bc2-a7ca-48ff-b0fe-4d50465eb651"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16908, 484, 315, 7, 28, "Input",ExpressionUUID->"982ed199-5ab6-4f96-bc80-44c118817af4"],
Cell[17226, 493, 332, 10, 32, "Output",ExpressionUUID->"f624beb9-4d07-465e-9209-e41b74f092b7"]
}, Open  ]],
Cell[17573, 506, 870, 16, 78, "Text",ExpressionUUID->"d6cc942f-3d81-4f6c-a2dc-24d820491efd"],
Cell[CellGroupData[{
Cell[18468, 526, 203, 4, 28, "Input",ExpressionUUID->"f0fe1385-a16b-477d-87b2-8bd821c593c4"],
Cell[18674, 532, 158, 3, 32, "Output",ExpressionUUID->"e64a0c67-aaad-4e4f-a955-729a75d4a583"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18869, 540, 255, 6, 28, "Input",ExpressionUUID->"6fa46133-f467-494d-af08-009a3218087c"],
Cell[19127, 548, 156, 3, 32, "Output",ExpressionUUID->"1e7d71c2-db1c-479d-aec9-f363b19e57ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19320, 556, 244, 6, 39, "Input",ExpressionUUID->"82dba370-0c57-4ec1-8462-d136c2a22edf"],
Cell[19567, 564, 156, 3, 32, "Output",ExpressionUUID->"e89b4371-d63d-4a2d-b12c-2732270966cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19760, 572, 305, 8, 58, "Input",ExpressionUUID->"a22d9213-5886-46df-9a7b-02aaca51a1df"],
Cell[20068, 582, 157, 3, 32, "Output",ExpressionUUID->"5776571e-6347-47ad-81c0-263bf8a2da30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20262, 590, 267, 6, 28, "Input",ExpressionUUID->"3d6c2112-d16e-4c7e-bbe8-44fb32c5b679"],
Cell[20532, 598, 156, 3, 32, "Output",ExpressionUUID->"c98a2859-7628-4a5e-aac1-99ed8c280f6e"]
}, Open  ]],
Cell[20703, 604, 273, 6, 34, "Text",ExpressionUUID->"d1c6ae91-b757-4651-8420-8e9e26e1a108"],
Cell[CellGroupData[{
Cell[21001, 614, 218, 6, 39, "Input",ExpressionUUID->"64dccc32-e24e-49fc-bd16-6329092d0544"],
Cell[21222, 622, 219, 6, 42, "Output",ExpressionUUID->"abac6ca6-bfca-4b78-b5e7-9da6ffce7b64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21478, 633, 427, 12, 65, "Input",ExpressionUUID->"60f6a045-760f-4833-a89c-b9dcb73081d4"],
Cell[21908, 647, 156, 3, 32, "Output",ExpressionUUID->"39843afc-c72a-46ac-8e86-a9c25b00d10c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22101, 655, 341, 9, 44, "Input",ExpressionUUID->"a0d6239a-de57-4c66-9fc3-1eb4c575fdcd"],
Cell[22445, 666, 158, 3, 32, "Output",ExpressionUUID->"5840f0c7-5435-447c-a6d4-1d07068931b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22640, 674, 421, 11, 64, "Input",ExpressionUUID->"8e26e119-50b1-49a3-a7e2-3e039e06ff29"],
Cell[23064, 687, 191, 4, 32, "Output",ExpressionUUID->"a12344a1-9356-4458-948d-cc0392316945"]
}, Open  ]],
Cell[23270, 694, 156, 3, 28, "Input",ExpressionUUID->"d0a622bf-5f87-4013-ace7-e17c43bc159a"],
Cell[23429, 699, 882, 26, 60, "Text",ExpressionUUID->"6f184b8b-0f41-4d64-b4ff-133ed7ebbd5f"],
Cell[CellGroupData[{
Cell[24336, 729, 655, 19, 48, "Input",ExpressionUUID->"0428df56-94ef-459f-92e5-df88fb6e8df8"],
Cell[24994, 750, 683, 24, 32, "Output",ExpressionUUID->"c17dd272-77b5-40b4-b684-e5e4b46ae662"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[25726, 780, 177, 3, 53, "Section",ExpressionUUID->"b49ca390-6140-439e-879f-cc34e52b3692"],
Cell[25906, 785, 193, 3, 34, "Text",ExpressionUUID->"bd0c02fd-0a1c-4ef5-b960-32ba80a0c87a"],
Cell[CellGroupData[{
Cell[26124, 792, 1554, 47, 32, "Input",ExpressionUUID->"4e98bd80-234f-4eb2-a771-e154be67319b"],
Cell[27681, 841, 1780, 46, 73, "Output",ExpressionUUID->"3cc6a5af-ad89-458d-9975-a915fc3d757a"]
}, Open  ]],
Cell[29476, 890, 170, 3, 34, "Text",ExpressionUUID->"be06f9ec-9132-40ad-ae7b-a52f5c6c2df0"],
Cell[CellGroupData[{
Cell[29671, 897, 1526, 46, 32, "Input",ExpressionUUID->"890362fd-0a4c-48fd-b62f-9a382db0cac2"],
Cell[31200, 945, 1917, 48, 73, "Output",ExpressionUUID->"0017ebe5-55cd-4e73-82ab-5a854438622e"]
}, Open  ]],
Cell[33132, 996, 429, 8, 34, "Text",ExpressionUUID->"f46ee577-39b0-4516-a1d2-982abe97d8ae"],
Cell[CellGroupData[{
Cell[33586, 1008, 1848, 46, 92, "Input",ExpressionUUID->"e879cbf6-06a9-4cf7-8175-812680d7d40b"],
Cell[35437, 1056, 8200, 236, 211, "Output",ExpressionUUID->"2c96290a-32b5-4704-b94f-471540264b7c"]
}, Open  ]],
Cell[43652, 1295, 8254, 237, 207, InheritFromParent,ExpressionUUID->"7852fa49-b0ee-49e5-ab3b-951488a4bbfe"],
Cell[CellGroupData[{
Cell[51931, 1536, 729, 18, 48, "Input",ExpressionUUID->"04a7107e-ef6b-433d-9fdb-ceee9f5e7752"],
Cell[52663, 1556, 143140, 2344, 307, 114078, 1867, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"c91d3910-1388-48c8-9b1e-d4811887ab9b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[195852, 3906, 268, 6, 53, "Section",ExpressionUUID->"304474e8-c742-4bed-8789-61bb824e5f7e"],
Cell[196123, 3914, 353, 7, 34, "Text",ExpressionUUID->"f2f25658-6091-4080-8881-6e991088dc8a"],
Cell[196479, 3923, 553, 19, 52, "Input",ExpressionUUID->"8692744f-0ba7-443e-b4f1-6dd461c625dc"],
Cell[197035, 3944, 151, 3, 34, "Text",ExpressionUUID->"762e4807-745d-4351-830b-fc49f06efd41"],
Cell[197189, 3949, 427, 11, 28, "Input",ExpressionUUID->"c21c1ee0-7be2-468b-9445-bf3338e6b018"],
Cell[197619, 3962, 851, 20, 78, "Text",ExpressionUUID->"c1739456-3c91-469f-b1f9-85bcbc848e56"],
Cell[198473, 3984, 447, 8, 50, "Text",ExpressionUUID->"c161d227-1cba-466c-bfda-3771a0dcba61"],
Cell[CellGroupData[{
Cell[198945, 3996, 1195, 30, 48, "Input",ExpressionUUID->"8dda9f6d-e1f7-4465-bcff-10c820bab061"],
Cell[200143, 4028, 853, 16, 23, "Message",ExpressionUUID->"db778569-49d5-4b02-b249-011d01cbe33e"],
Cell[200999, 4046, 565, 16, 32, "Output",ExpressionUUID->"0073537f-f0ea-40ed-9ca1-e79ba41f6a9d"]
}, Open  ]],
Cell[201579, 4065, 647, 20, 68, "Input",ExpressionUUID->"8437fd7a-067f-4d95-9b1f-648a7ceba4db"],
Cell[202229, 4087, 358, 7, 50, "Text",ExpressionUUID->"256c934b-6ccf-424f-8d90-0a6b96a605e7"],
Cell[202590, 4096, 477, 8, 50, "Text",ExpressionUUID->"c09d5fb1-b11d-4f49-9a8c-7a07c4b48fc5"],
Cell[203070, 4106, 749, 23, 68, "Input",ExpressionUUID->"384a737f-64c6-44a1-84bb-69d9378c23b3"],
Cell[203822, 4131, 240, 6, 34, "Text",ExpressionUUID->"e008b249-5a53-447d-b8f9-72cff5348e00"],
Cell[CellGroupData[{
Cell[204087, 4141, 680, 19, 32, "Input",ExpressionUUID->"5061ce42-8a5c-4fd8-b04e-402fba29e6c4"],
Cell[204770, 4162, 375, 9, 21, "Message",ExpressionUUID->"650aa92c-6e52-4d6a-9055-087e0474a0c1"],
Cell[205148, 4173, 727, 21, 69, "Output",ExpressionUUID->"5382c936-c714-4cb9-a525-d6959775e168"]
}, Open  ]],
Cell[205890, 4197, 292, 6, 50, "Text",ExpressionUUID->"1bc54ac4-ce6e-4350-bc9e-4f9bdc2ad2b0"],
Cell[206185, 4205, 1018, 25, 75, "Text",ExpressionUUID->"bea40fae-5f3d-4f54-a754-36c023f2cddd"]
}, Closed]],
Cell[CellGroupData[{
Cell[207240, 4235, 257, 4, 53, "Section",ExpressionUUID->"c2fa78ba-86ae-4523-a4ad-8aa5872e354c"],
Cell[207500, 4241, 334, 7, 34, "Text",ExpressionUUID->"89359862-1697-4237-baf7-3cc227a07ab7"],
Cell[CellGroupData[{
Cell[207859, 4252, 3320, 102, 55, "Input",ExpressionUUID->"f974f574-9695-490a-b43a-d1f74e47a3dc"],
Cell[211182, 4356, 351, 9, 21, "Message",ExpressionUUID->"02ac1205-69e1-4f5b-bcbe-f856c4bdea9c"],
Cell[211536, 4367, 48088, 830, 71, "Output",ExpressionUUID->"dc96130b-d9f2-44f6-98ee-672333cc9483"]
}, Open  ]],
Cell[259639, 5200, 2031, 54, 98, "Input",ExpressionUUID->"cdba5e67-2a63-4f66-8a0a-0047d65bdd62"],
Cell[261673, 5256, 214, 3, 50, "Text",ExpressionUUID->"93f840e2-1e2b-458c-a30f-1f393ee12927"],
Cell[261890, 5261, 317, 7, 34, "Text",ExpressionUUID->"71013fa8-943f-4989-9071-780cf3b8f2bb"],
Cell[CellGroupData[{
Cell[262232, 5272, 811, 22, 49, "Input",ExpressionUUID->"585c4ecd-76fa-47fc-9d32-7c75e7e15a13"],
Cell[263046, 5296, 399, 9, 21, "Message",ExpressionUUID->"33608316-6902-45f1-9acc-5ab51d9c56db"],
Cell[263448, 5307, 814, 23, 53, "Output",ExpressionUUID->"c6cf74bc-84c1-4f40-92dc-6dc8647b7957"]
}, Open  ]],
Cell[264277, 5333, 207, 3, 50, "Text",ExpressionUUID->"5d26e663-570a-44b6-a77d-80318eefd5ee"],
Cell[CellGroupData[{
Cell[264509, 5340, 1316, 36, 69, "Input",ExpressionUUID->"7f6f7cdf-730e-4903-ae7b-2939c4ebdf68"],
Cell[265828, 5378, 1059, 19, 43, "Message",ExpressionUUID->"70bf8d9c-e408-4570-9cd0-4995eb1a6534"],
Cell[266890, 5399, 876, 25, 53, "Output",ExpressionUUID->"15246167-8050-4ad7-a6aa-4701158417b1"]
}, Open  ]],
Cell[267781, 5427, 768, 15, 122, "Text",ExpressionUUID->"51e964a8-bb68-4b1d-ae3c-3b0064a270fe"],
Cell[268552, 5444, 681, 22, 52, "Input",ExpressionUUID->"b7140529-acd2-43c0-baa8-f4f3e4d5086e"],
Cell[269236, 5468, 330, 7, 34, "Text",ExpressionUUID->"a88f37c0-c45b-4447-836d-0a49ba075df1"]
}, Closed]],
Cell[CellGroupData[{
Cell[269603, 5480, 169, 3, 53, "Section",ExpressionUUID->"60296e6d-a283-4ae8-bae2-08137ff5b134"],
Cell[CellGroupData[{
Cell[269797, 5487, 234, 4, 44, "Subsubsection",ExpressionUUID->"a00815cd-54b2-44ce-b4ee-ba320c80c61b"],
Cell[270034, 5493, 511, 11, 78, "Text",ExpressionUUID->"36dd9cb0-3bfa-4fd9-b04f-b1cec3668c6a"],
Cell[270548, 5506, 731, 16, 182, "Text",ExpressionUUID->"374a5b0f-c918-4271-993a-d78be3228a74"],
Cell[271282, 5524, 149, 3, 48, "Input",ExpressionUUID->"00d58c47-76aa-4732-9487-fe59fef045b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271468, 5532, 244, 4, 44, "Subsubsection",ExpressionUUID->"fc552c85-f751-46c1-952d-67ca6d86ff4d"],
Cell[271715, 5538, 3017, 54, 600, "Text",ExpressionUUID->"d8fbf834-621d-45c2-bc39-cdcc1c51beec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274781, 5598, 197, 3, 67, "Section",ExpressionUUID->"cc79a90d-87a3-45c5-a830-171d253ad290"],
Cell[274981, 5603, 2270, 48, 298, "Text",ExpressionUUID->"c71a2b61-4773-4f5f-b19c-a0acdbd29c9f"],
Cell[277254, 5653, 650, 11, 56, "Text",ExpressionUUID->"eaa7b1d2-5d7e-4938-a48a-04781f9c8e30"],
Cell[277907, 5666, 855, 24, 32, "Input",ExpressionUUID->"d433ade0-dc36-43f2-991b-069953b890a8"],
Cell[278765, 5692, 2383, 69, 55, "Input",ExpressionUUID->"8e43f4b0-0b3e-4198-9811-e0386536b6fd"],
Cell[281151, 5763, 186, 3, 34, "Text",ExpressionUUID->"765df1e3-1b5b-4d21-a166-2a923c5f4f22"],
Cell[281340, 5768, 2700, 76, 78, "Input",ExpressionUUID->"2a6d4fef-295d-4d1b-bbd1-a2ed14ed920d"],
Cell[284043, 5846, 250, 6, 34, "Text",ExpressionUUID->"d178036a-605a-4696-b865-2f990196e943"],
Cell[284296, 5854, 2140, 62, 78, "Input",ExpressionUUID->"aa769e65-48e3-46b0-a643-9c2ae85c4b03"],
Cell[286439, 5918, 775, 12, 56, "Text",ExpressionUUID->"e4a3e059-adb8-4cf8-8677-54f25dc36897"],
Cell[287217, 5932, 919, 23, 33, "Input",ExpressionUUID->"b0f580d6-a74f-45d6-b414-f46335238a00"],
Cell[288139, 5957, 792, 20, 38, "Text",ExpressionUUID->"153cf5d6-27f7-4e59-817d-913dcb366620"],
Cell[CellGroupData[{
Cell[288956, 5981, 359, 8, 33, "Input",ExpressionUUID->"6cd34fb7-8566-4076-b962-9b3c87aabc88"],
Cell[289318, 5991, 414, 11, 37, "Output",ExpressionUUID->"33281638-8dba-436a-98fa-5518a3f3206e"]
}, Open  ]],
Cell[289747, 6005, 215, 5, 35, "Text",ExpressionUUID->"491af219-4af4-4c03-b848-ecd9ead03793"],
Cell[289965, 6012, 1456, 36, 79, "Input",ExpressionUUID->"c3886129-7797-4483-a56c-052e85210d1f"],
Cell[291424, 6050, 505, 11, 104, "Text",ExpressionUUID->"070d3f65-c048-4100-b23f-10fbb2a0569e"],
Cell[291932, 6063, 1333, 33, 33, "Input",ExpressionUUID->"20b160c2-8db1-4d59-9daf-f40d1d787222"],
Cell[293268, 6098, 456, 9, 58, "Text",ExpressionUUID->"19d6ee1e-1c4e-4dc2-9e5f-bf80e3ba3518"],
Cell[293727, 6109, 918, 26, 33, "Input",ExpressionUUID->"75f65af1-54f2-4043-b297-e079dc702e85"]
}, Closed]]
}
]
*)

